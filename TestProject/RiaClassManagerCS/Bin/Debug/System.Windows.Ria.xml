<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Ria</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Ria.ApplicationServices.UserSerializer">
            <summary>
            Utility for deserializing a user entity sent in the object tag.
            </summary>
        </member>
        <member name="F:System.Windows.Ria.ApplicationServices.UserSerializer.UserKey">
            <summary>
            Key for use in serializing the user.
            </summary>
            <remarks>
            This key is duplicateed on the client and server.
            </remarks>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserSerializer.DeserializeUser(System.Type,System.String)">
            <summary>
            Deserializes the user into the specified type.
            </summary>
            <param name="userType">The type of the serialized user</param>
            <param name="serializedUser">The user to deserialize</param>
            <returns>A deserialized user</returns>
        </member>
        <member name="T:System.Windows.Ria.ApplicationServices.WebUserService">
            <summary>
            Default implementation of the <see cref="T:System.Windows.Ria.ApplicationServices.UserService"/> that relies on
            the data service provided in <see cref="N:System.Web.Ria"/> and the
            ASP.NET providers for <c>Membership, Roles, and Profile</c>.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.ApplicationServices.UserService">
            <summary>
            Service that is responsible for authenticating, loading, and saving the current user. 
            The <see cref="M:System.Windows.Ria.ApplicationServices.UserService.Login(System.Windows.Ria.ApplicationServices.LoginParameters)"/>, <see cref="M:System.Windows.Ria.ApplicationServices.UserService.Logout"/>, <see cref="M:System.Windows.Ria.ApplicationServices.UserService.LoadUser"/>,
            and <see cref="M:System.Windows.Ria.ApplicationServices.UserService.SaveUser"/> methods are processed asynchronously.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserService.#ctor">
            <summary>
            Initializes a new instance of the UserService class.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserService.GetApplicationService(System.Type)">
            <summary>
            Gets an application service that is the specified type such that
            <c>type.IsAssignableFrom(service.GetType())</c> returns true.
            </summary>
            <remarks>
            This method exists because there isn't something comparable in
            <see cref="T:System.Windows.Application"/>. There's a DCR to add one.
            </remarks>
            <param name="type">The class, interface, or base class to get the service for</param>
            <returns>An application service that extends the specified type</returns>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserService.Login(System.String,System.String)">
            <summary>
            Asynchronously authenticates and logs in to the server with the specified identity.
            </summary>
            <remarks>
            Delegates to <see cref="M:System.Windows.Ria.ApplicationServices.UserService.Login(System.Windows.Ria.ApplicationServices.LoginParameters)"/>.
            </remarks>
            <param name="userName">The username associated with the identity to authenticate</param>
            <param name="password">the password associated with the identity to authenticate</param>
            <exception cref="T:System.InvalidOperationException"> is thrown if this method is called while an 
            asynchronous operation is still being processed.
            </exception>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserService.Login(System.Windows.Ria.ApplicationServices.LoginParameters)">
            <summary>
            Asynchronously authenticates and logs in to the server with the specified identity.
            </summary>
            <remarks>
            When this method returns normally, a <see cref="E:System.Windows.Ria.ApplicationServices.UserService.LoginCompleted"/> event will always be
            raised to indicate the end of the asynchronous call. Error or cancelation status can be
            determined by looking at the <see cref="T:System.Windows.Ria.ApplicationServices.LoginCompletedEventArgs"/> included in the event.
            Successful completion of this operation will update the <see cref="P:System.Windows.Ria.ApplicationServices.UserService.User"/>.
            </remarks>
            <param name="parameters">Login parameters that specify the identity to authenticate</param>
            <exception cref="T:System.InvalidOperationException"> is thrown if this method is called while an 
            asynchronous operation is still being processed.
            </exception>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserService.Logout">
            <summary>
            Asynchronously logs an authenticated identity out from the server.
            </summary>
            <remarks>
            When this method returns normally, a <see cref="E:System.Windows.Ria.ApplicationServices.UserService.LogoutCompleted"/> event will always be
            raised to indicate the end of the asynchronous call. Error or cancelation status can be
            determined by looking at the <see cref="T:System.Windows.Ria.ApplicationServices.LogoutCompletedEventArgs"/> included in the event.
            Successful completion of this operation will update the <see cref="P:System.Windows.Ria.ApplicationServices.UserService.User"/>.
            </remarks>
            <exception cref="T:System.InvalidOperationException"> is thrown if this method is called while an 
            asynchronous operation is still being processed.
            </exception>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserService.LoadUser">
            <summary>
            Asynchronously loads the authenticated identity from the server.
            </summary>
            <remarks>
            When this method returns normally, a <see cref="E:System.Windows.Ria.ApplicationServices.UserService.LoadUserCompleted"/> event will always be
            raised to indicate the end of the asynchronous call. Error or cancelation status can be
            determined by looking at the <see cref="T:System.Windows.Ria.ApplicationServices.LoadUserCompletedEventArgs"/> included in the event.
            Successful completion of this operation will update the <see cref="P:System.Windows.Ria.ApplicationServices.UserService.User"/>.
            </remarks>
            <exception cref="T:System.InvalidOperationException"> is thrown if this method is called while an 
            asynchronous operation is still being processed.
            </exception>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserService.SaveUser">
            <summary>
            Asynchronously saves the authenticated identity to the server.
            </summary>
            <remarks>
            When this method returns normally, a <see cref="E:System.Windows.Ria.ApplicationServices.UserService.SaveUserCompleted"/> event will always be
            raised to indicate the end of the asynchronous call. Error or cancelation status can be
            determined by looking at the <see cref="T:System.Windows.Ria.ApplicationServices.SaveUserCompletedEventArgs"/> included in the event.
            </remarks>
            <exception cref="T:System.InvalidOperationException"> is thrown if this method is called while an 
            asynchronous operation is still being processed.
            </exception>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserService.Cancel">
            <summary>
            Cancels an asynchronous operation that has not completed.
            </summary>
            <remarks>
            If an operation is in progress and can be canceled, the corresponding completion event
            will be raised with the canceled property set to true.
            </remarks>
            <seealso cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled"/>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserService.OnLoginCompleted(System.Windows.Ria.ApplicationServices.LoginCompletedEventArgs)">
            <summary>
            Raises a login completed event.
            </summary>
            <remarks>
            This method should be called by concrete service implementations when
            an asynchronous <see cref="M:System.Windows.Ria.ApplicationServices.UserService.Login(System.Windows.Ria.ApplicationServices.LoginParameters)"/> operation completes.
            </remarks>
            <param name="e">The event to raise</param>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserService.OnLogoutCompleted(System.Windows.Ria.ApplicationServices.LogoutCompletedEventArgs)">
            <summary>
            Raises a logout completed event.
            </summary>
            <remarks>
            This method should be called by concrete service implementations when
            an asynchronous <see cref="M:System.Windows.Ria.ApplicationServices.UserService.Logout"/> operation completes.
            </remarks>
            <param name="e">The event to raise</param>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserService.OnLoadUserCompleted(System.Windows.Ria.ApplicationServices.LoadUserCompletedEventArgs)">
            <summary>
            Raises a load user completed event.
            </summary>
            <remarks>
            This method should be called by concrete service implementations when
            an asynchronous <see cref="M:System.Windows.Ria.ApplicationServices.UserService.LoadUser"/> operation completes.
            </remarks>
            <param name="e">The event to raise</param>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserService.OnSaveUserCompleted(System.Windows.Ria.ApplicationServices.SaveUserCompletedEventArgs)">
            <summary>
            Raises a save user completed event.
            </summary>
            <remarks>
            This method should be called by concrete service implementations when
            an asynchronous <see cref="M:System.Windows.Ria.ApplicationServices.UserService.SaveUser"/> operation completes.
            </remarks>
            <param name="e">The event to raise</param>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserService.StartService(System.Windows.ApplicationServiceContext)">
            <summary>
            Starts the user service.
            </summary>
            <param name="context">The application service context</param>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserService.StartServiceCore(System.Windows.ApplicationServiceContext)">
            <summary>
            Starts the user service.
            </summary>
            <remarks>
            This method is invoked from <see cref="M:System.Windows.Ria.ApplicationServices.UserService.StartService(System.Windows.ApplicationServiceContext)"/> when the
            service is started by the <see cref="T:System.Windows.Application"/>. When overriding, the base
            implementations does not need to be invoked.
            </remarks>
            <param name="context">The application service context</param>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserService.StopService">
            <summary>
            Stops the user service.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserService.StopServiceCore">
            <summary>
            Stops the user service.
            </summary>
            <remarks>
            This method is invoked from <see cref="M:System.Windows.Ria.ApplicationServices.UserService.StopService"/> when the
            service is stopped by the <see cref="T:System.Windows.Application"/>. When overriding, the base
            implementations does not need to be invoked.
            </remarks>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.UserService.Current">
            <summary>
            Gets the current user service.
            </summary>
            <remarks>
            This property returns the first <see cref="T:System.Windows.Ria.ApplicationServices.UserService"/> registered as
            an application service with <see cref="P:System.Windows.Application.Current"/>.
            </remarks>
            <see cref="P:System.Windows.Application.Services"/>
        </member>
        <member name="E:System.Windows.Ria.ApplicationServices.UserService.LoginCompleted">
            <summary>
            Raised every time an asynchronous <see cref="M:System.Windows.Ria.ApplicationServices.UserService.Login(System.Windows.Ria.ApplicationServices.LoginParameters)"/> is completed.
            </summary>
            <remarks>
            This event will be raised on the UI thread.
            To only receive events when the authentication state changes, subscribe
            for user <code>PropertyChanged</code> events. By default, these events are availble
            on <see cref="P:System.Windows.Ria.ApplicationServices.UserService.User"/> and <see cref="P:System.Windows.Ria.ApplicationServices.UserContext.User"/>.
            </remarks>
            <seealso cref="T:System.Windows.Ria.ApplicationServices.UserContext"/>
            <seealso cref="T:System.Windows.Ria.ApplicationServices.UserBase"/>
            <exception cref="T:System.Net.WebException"> is returned in the args if an error 
            occurs while accessing the network.
            </exception>
        </member>
        <member name="E:System.Windows.Ria.ApplicationServices.UserService.LogoutCompleted">
            <summary>
            Raised every time an asynchronous <see cref="M:System.Windows.Ria.ApplicationServices.UserService.Logout"/> is completed.
            </summary>
            <remarks>
            This event will be raised on the UI thread.
            To only receive events when the authentication state changes, subscribe
            for user <code>PropertyChanged</code> events. By default, these events are availble
            on <see cref="P:System.Windows.Ria.ApplicationServices.UserService.User"/> and <see cref="P:System.Windows.Ria.ApplicationServices.UserContext.User"/>.
            </remarks>
            <seealso cref="T:System.Windows.Ria.ApplicationServices.UserContext"/>
            <seealso cref="T:System.Windows.Ria.ApplicationServices.UserBase"/>
            <exception cref="T:System.Net.WebException"> is returned in the args if an error 
            occurs while accessing the network.
            </exception>
        </member>
        <member name="E:System.Windows.Ria.ApplicationServices.UserService.LoadUserCompleted">
            <summary>
            Raised every time an asynchronous <see cref="M:System.Windows.Ria.ApplicationServices.UserService.LoadUser"/> is completed.
            </summary>
            <remarks>
            This event will be raised on the UI thread.
            To only receive events when the authentication state changes, subscribe
            for user <code>PropertyChanged</code> events. By default, these events are availble
            on <see cref="P:System.Windows.Ria.ApplicationServices.UserService.User"/> and <see cref="P:System.Windows.Ria.ApplicationServices.UserContext.User"/>.
            </remarks>
            <seealso cref="T:System.Windows.Ria.ApplicationServices.UserContext"/>
            <seealso cref="T:System.Windows.Ria.ApplicationServices.UserBase"/>
            <exception cref="T:System.Net.WebException"> is returned in the args if an error 
            occurs while accessing the network.
            </exception>
        </member>
        <member name="E:System.Windows.Ria.ApplicationServices.UserService.SaveUserCompleted">
            <summary>
            Raised every time an asynchronous <see cref="M:System.Windows.Ria.ApplicationServices.UserService.SaveUser"/> is completed.
            </summary>
            <remarks>
            This event will be raised on the UI thread.
            </remarks>
            <exception cref="T:System.Net.WebException"> is returned in the args if an error 
            occurs while accessing the network.
            </exception>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.UserService.SynchronizationContext">
            <summary>
            Gets or sets the <see cref="P:System.Windows.Ria.ApplicationServices.UserService.SynchronizationContext"/> to raise events with
            </summary>
            <exception cref="T:System.ArgumentNullException"> is thrown if the context is null</exception>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.UserService.IsBusy">
            <summary>
            Gets a value indicating whether an asynchronous operation is in progress
            </summary>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.UserService.User">
            <summary>
            Gets a principal representing the authenticated identity.
            </summary>
            <remarks>
            This value may be updated by <see cref="M:System.Windows.Ria.ApplicationServices.UserService.Login(System.Windows.Ria.ApplicationServices.LoginParameters)"/>, 
            <see cref="M:System.Windows.Ria.ApplicationServices.UserService.Logout"/>, and <see cref="M:System.Windows.Ria.ApplicationServices.UserService.LoadUser"/> operations. When the
            user is not authenticated, this value may either be null or a default
            principal.
            </remarks>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.WebUserService.#ctor">
            <summary>
            Initializes a new instance of the WebUserService class.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.WebUserService.Login(System.Windows.Ria.ApplicationServices.LoginParameters)">
            <summary>
            Logs the user in. See <see cref="M:System.Windows.Ria.ApplicationServices.UserService.Login(System.Windows.Ria.ApplicationServices.LoginParameters)"/>.
            </summary>
            <param name="parameters"></param>
            <exception cref="T:System.InvalidOperationException"> is thrown if this
            method is invoked before the service is started.
            </exception>
            <see cref="M:System.Windows.IApplicationService.StartService(System.Windows.ApplicationServiceContext)"/>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.WebUserService.OnInvokeOnlineCompleted(System.Windows.Ria.Data.InvokeEventArgs)">
            <summary>
            Handles completion of a call to <c>InvokeOnline</c>.
            </summary>
            <remarks>
            This method is invoked for both <see cref="M:System.Windows.Ria.ApplicationServices.WebUserService.Login(System.Windows.Ria.ApplicationServices.LoginParameters)"/> and <see cref="M:System.Windows.Ria.ApplicationServices.WebUserService.Logout"/>.
            </remarks>
            <param name="e">The event args</param>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.WebUserService.Logout">
            <summary>
            Logs the user out. See <see cref="M:System.Windows.Ria.ApplicationServices.UserService.Logout"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException"> is thrown if this
            method is invoked before the service is started.
            </exception>
            <see cref="M:System.Windows.IApplicationService.StartService(System.Windows.ApplicationServiceContext)"/>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.WebUserService.LoadUser">
            <summary>
            Loads the user. See <see cref="M:System.Windows.Ria.ApplicationServices.UserService.LoadUser"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException"> is thrown if this
            method is invoked before the service is started.
            </exception>
            <see cref="M:System.Windows.IApplicationService.StartService(System.Windows.ApplicationServiceContext)"/>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.WebUserService.OnBeginLoadCompleted(System.IAsyncResult)">
            <summary>
            Handles completion of a <see cref="M:System.Windows.Ria.Data.IDomainContext.BeginLoad(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Linq.IQueryable,System.Windows.Ria.Data.MergeOption,System.AsyncCallback,System.Object)"/> invoked from 
            <see cref="M:System.Windows.Ria.ApplicationServices.WebUserService.Login(System.Windows.Ria.ApplicationServices.LoginParameters)"/>, <see cref="M:System.Windows.Ria.ApplicationServices.WebUserService.Logout"/>, or <see cref="M:System.Windows.Ria.ApplicationServices.WebUserService.LoadUser"/>.
            </summary>
            <param name="asyncResult">The async result</param>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.WebUserService.CompleteLoad(System.Windows.Ria.ApplicationServices.EventArgsBuilder)">
            <summary>
            Completes the load that started in <see cref="M:System.Windows.Ria.ApplicationServices.WebUserService.Login(System.Windows.Ria.ApplicationServices.LoginParameters)"/>,
            <see cref="M:System.Windows.Ria.ApplicationServices.WebUserService.Logout"/>, or <see cref="M:System.Windows.Ria.ApplicationServices.WebUserService.LoadUser"/>.
            </summary>
            <param name="builder">The builder used in the asynchronous operation</param>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.WebUserService.SaveUser">
            <summary>
            Saves the user. See <see cref="M:System.Windows.Ria.ApplicationServices.UserService.SaveUser"/>.
            </summary>
            <remarks>
            <c>AuthenticationBase.UpdateUser</c> is designed as an update method, and will be
            invoked via <c>SubmitChanges</c> on the client. This has a couple implications.
            First, invoking <c>UpdateUser</c> will submit all changes that have occurred in
            the provider and may invoke other update methods.  Second, invoking other update 
            methods on the provider will submit all changes and may invoke <c>UpdateUser</c>.
            </remarks>
            <exception cref="T:System.InvalidOperationException"> is thrown if this
            method is invoked before the service is started.
            </exception>
            <see cref="M:System.Windows.IApplicationService.StartService(System.Windows.ApplicationServiceContext)"/>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.WebUserService.OnBeginSubmitChangesCompleted(System.IAsyncResult)">
            <summary>
            Handles completion of a <see cref="M:System.Windows.Ria.Data.IDomainContext.BeginSubmitChanges(System.AsyncCallback,System.Object)"/> invoked 
            from <see cref="M:System.Windows.Ria.ApplicationServices.WebUserService.SaveUser"/>.
            </summary>
            <param name="asyncResult">The async result</param>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.WebUserService.CompleteSubmit(System.Windows.Ria.ApplicationServices.EventArgsBuilder)">
            <summary>
            Completes the save that started in <see cref="M:System.Windows.Ria.ApplicationServices.WebUserService.SaveUser"/>.
            </summary>
            <param name="builder">The builder used in the asynchronous operation</param>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.WebUserService.Cancel">
            <summary>
            Cancels an asynchronous operation. See <see cref="M:System.Windows.Ria.ApplicationServices.UserService.Cancel"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException"> is thrown if this
            method is invoked before the service is started.
            </exception>
            <see cref="M:System.Windows.IApplicationService.StartService(System.Windows.ApplicationServiceContext)"/>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.WebUserService.SetUser(System.Windows.Ria.ApplicationServices.UserBase,System.Windows.Ria.ApplicationServices.UserBase)">
            <summary>
            Sets the user and updates the underlying user list if necessary.
            </summary>
            <param name="user">The new user</param>
            <param name="old">The old user</param>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.WebUserService.StartServiceCore(System.Windows.ApplicationServiceContext)">
            <summary>
            Starts the user service.
            </summary>
            <remarks>
            This service initializes the domain context and then deserializes or creates
            a default user. Once the service has been started, the service methods can be invoked.
            </remarks>
            <param name="context">The application service context</param>
            <exception cref="T:System.InvalidOperationException"> is thrown if the service cannot be
            initialized.
            </exception>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.WebUserService.InitializeDomainContext">
            <summary>
            Initializes the domain context.
            </summary>
            <remarks>
            If the domain context has not already been set, this method trys to instantiate
            one specified by the <see cref="P:System.Windows.Ria.ApplicationServices.WebUserService.DomainContextType"/> string.
            </remarks>
            <exception cref="T:System.InvalidOperationException"> is thrown if the domain context cannot 
            be created.
            </exception>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.WebUserService.InitializeUser(System.String)">
            <summary>
            Initializes the default user.
            </summary>
            <remarks>
            This method attempts to deserialize a user from <paramref name="serializedUser"/>.
            If a user cannot be deserialized, a default user is created instead.
            </remarks>
            <param name="serializedUser">The serialized user data</param>
            <exception cref="T:System.InvalidOperationException"> is thrown if a user cannot be deserialized
            and cannot be created.
            </exception>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.WebUserService.StopServiceCore">
            <summary>
            Stops the user service.
            </summary>
            <remarks>
            This method cancels any pending operations. Once the service has been stopped,
            the service methods can no longer be invoked.
            </remarks>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.WebUserService.AssertIsNotActive">
            <summary>
            Throws an exception if the service is active.
            </summary>
            <exception cref="T:System.InvalidOperationException"> is thrown if the service is active.
            </exception>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.WebUserService.AssertIsActive">
            <summary>
            Throws an exception if the service is not active.
            </summary>
            <exception cref="T:System.InvalidOperationException"> is thrown if the service is not active.
            </exception>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.WebUserService.IsBusy">
            <summary>
            Gets a value indicating whether this service is busy. See 
            <see cref="P:System.Windows.Ria.ApplicationServices.UserService.IsBusy"/>.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.WebUserService.User">
            <summary>
            Gets the user. See <see cref="P:System.Windows.Ria.ApplicationServices.UserService.User"/>.
            </summary>
            <remarks>
            The user extends <see cref="T:System.Windows.Ria.ApplicationServices.UserBase"/> and can be bound to.
            </remarks>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.WebUserService.DomainContextType">
            <summary>
            Gets and sets the type of the domain context.
            </summary>
            <remarks>
            If the <see cref="P:System.Windows.Ria.ApplicationServices.WebUserService.DomainContext"/> is not set when this service is
            started, it will instantiate a context specified by the
            <see cref="P:System.Windows.Ria.ApplicationServices.WebUserService.DomainContextType"/>. In determining the type, this
            string is treated as the full name of a type in the application 
            assembly. If the initial search does not return a valid type, this 
            string is treated as the assembly qualified name of a type.
            </remarks>
            <exception cref="T:System.InvalidOperationException"> is thrown if this
            property is set after the service is started.
            </exception>
            <see cref="M:System.Windows.IApplicationService.StartService(System.Windows.ApplicationServiceContext)"/>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.WebUserService.DomainContext">
            <summary>
            Gets the domain context this service delegates authenticating, loading, 
            and saving to.
            </summary>
            <exception cref="T:System.InvalidOperationException"> is thrown if this
            property is set after the service is started.
            </exception>
            <see cref="M:System.Windows.IApplicationService.StartService(System.Windows.ApplicationServiceContext)"/>
        </member>
        <member name="T:System.Windows.Ria.ApplicationServices.WebUserService.AsyncMethodType">
            <summary>
            Enum representing the asynchronous method types of a <see cref="T:System.Windows.Ria.ApplicationServices.UserService"/>.
            </summary>
        </member>
        <member name="F:System.Windows.Ria.ApplicationServices.WebUserService.AsyncMethodType.None">
            <summary>
            Represents the lack of an asynchronous method.
            </summary>
        </member>
        <member name="F:System.Windows.Ria.ApplicationServices.WebUserService.AsyncMethodType.Login">
            <summary>
            Represents <see cref="M:System.Windows.Ria.ApplicationServices.UserService.Login(System.Windows.Ria.ApplicationServices.LoginParameters)"/>.
            </summary>
        </member>
        <member name="F:System.Windows.Ria.ApplicationServices.WebUserService.AsyncMethodType.Logout">
            <summary>
            Represents <see cref="M:System.Windows.Ria.ApplicationServices.UserService.Logout"/>.
            </summary>
        </member>
        <member name="F:System.Windows.Ria.ApplicationServices.WebUserService.AsyncMethodType.LoadUser">
            <summary>
            Represents <see cref="M:System.Windows.Ria.ApplicationServices.UserService.LoadUser"/>.
            </summary>
        </member>
        <member name="F:System.Windows.Ria.ApplicationServices.WebUserService.AsyncMethodType.SaveUser">
            <summary>
            Represents <see cref="M:System.Windows.Ria.ApplicationServices.UserService.SaveUser"/>.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.ApplicationServices.AsyncMethodState">
            <summary>
            Enum to track the lifecycle of an asynchronous method. There are 
            two legal cycles. Idle -&gt; Processing -&gt; (opt. Canceling -&gt;) Idle.
            Unless the method state is <see cref="F:System.Windows.Ria.ApplicationServices.AsyncMethodState.Idle"/>, the method should 
            still be considered processing.
            </summary>
        </member>
        <member name="F:System.Windows.Ria.ApplicationServices.AsyncMethodState.Idle">
            <summary>
            Represents an idle state where a method is not processing.
            </summary>
        </member>
        <member name="F:System.Windows.Ria.ApplicationServices.AsyncMethodState.Processing">
            <summary>
            Represents a state where a method is actively processing.
            </summary>
        </member>
        <member name="F:System.Windows.Ria.ApplicationServices.AsyncMethodState.Canceling">
            <summary>
            Represents a state where a method has been canceled and is performing
            the processing necessary to return to an idle state.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.ApplicationServices.AuthenticationBase">
            <summary>
            <see cref="T:System.Windows.Ria.Data.DomainContext"/> generated as the base class for providers extending
            <c>System.Web.Ria.ApplicationServices.AuthenticationBase&lt;T&gt;</c>.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.DomainContext">
            <summary>
            A <see cref="T:System.Windows.Ria.Data.DomainContext"/> is a stateful client side representation of a DomainService, providing
            access to all the functionality of the DomainService.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.IDomainContext">
            <summary>
            Provides an interface for <see cref="T:System.Windows.Ria.Data.DomainContext"/>s.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.IDomainContext.BeginLoad(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Linq.IQueryable,System.Windows.Ria.Data.MergeOption,System.AsyncCallback,System.Object)">
            <summary>
            Executes an asynchronous Load operation.
            </summary>
            <param name="queryName">The name of the query to invoke.</param>
            <param name="parameters">Optional name/value collection of parameters to the method.</param>
            <param name="query">Optional query to be sent to the server for composition over the method results.</param>
            <param name="mergeOption">MergeOption specification to apply to this Load call.</param>
            <param name="callback">The callback to invoke when the load completed.</param>
            <param name="userState">Optional user state.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.IDomainContext.EndLoad(System.IAsyncResult)">
            <summary>
            Completes an asynchronous load operation.
            </summary>
            <param name="asyncResult">The asynchronous result.</param>
            <returns>The load results.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.IDomainContext.CancelLoad(System.IAsyncResult)">
            <summary>
            Cancels an asynchronous load operation.
            </summary>
            <param name="asyncResult">The asynchronous result.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.IDomainContext.BeginSubmitChanges(System.AsyncCallback,System.Object)">
            <summary>
            Submit all pending changes to the domain service.
            </summary>
            <param name="callback">The callback to invoke when the submit has completed.</param>
            <param name="userState">Optional user state that will be passed through on
            the <see cref="T:System.Windows.Ria.Data.SubmittedChangesEventArgs"/>.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.IDomainContext.EndSubmitChanges(System.IAsyncResult)">
            <summary>
            Completes an asynchronous submit operation.
            </summary>
            <param name="asyncResult">The asynchronous result.</param>
            <returns>The submit-changes results.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.IDomainContext.CancelSubmitChanges(System.IAsyncResult)">
            <summary>
            Cancels an asynchronous submit operation.
            </summary>
            <param name="asyncResult">The asynchronous result.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.IDomainContext.GetItems(System.Type)">
            <summary>
            Gets the entities of the specified type.
            </summary>
            <param name="entityType">An entity type.</param>
            <returns>A list of entities.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.#ctor(System.Windows.Ria.Data.DomainClient)">
            <summary>
            Protected constructor
            </summary>
            <param name="domainClient">The <see cref="P:System.Windows.Ria.Data.DomainContext.DomainClient"/> instance this <see cref="T:System.Windows.Ria.Data.DomainContext"/> should use</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.CreateEntityContainer">
            <summary>
            Creates and returns an entity container configured with <see cref="T:System.Windows.Ria.Data.EntityList"/>s for all 
            entities this context will provide access to. The return must be non-null.
            </summary>
            <returns>The container</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.AddReference(System.Windows.Ria.Data.DomainContext)">
            <summary>
            Adds a reference to an external <see cref="T:System.Windows.Ria.Data.DomainContext"/>.  Once a reference is established, referenced
            DomainContext instances will be consulted when resolving the <see cref="T:System.Windows.Ria.Data.EntityList"/> for an <see cref="T:System.Windows.Ria.Data.Entity"/> type.
            </summary>
            <param name="domainContext">A <see cref="T:System.Windows.Ria.Data.DomainContext"/> to register as an external reference.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.EntityContainerPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Event handler for property changed events on our EntityContainer
            </summary>
            <param name="sender">The EntityContainer</param>
            <param name="e">The event args</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.CancelAllRequests">
            <summary>
            Cancels all pending requests.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.CancelRequests(System.Object)">
            <summary>
            Cancels a pending service operation or <see cref="M:System.Windows.Ria.Data.DomainContext.SubmitChanges"/> invocation, or 
            the first load operation which is associated with the specified <paramref name="userState"/>.
            </summary>
            <param name="userState">The user-state associated with a domain operation.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.RejectChanges">
            <summary>
            Revert all pending changes for this <see cref="T:System.Windows.Ria.Data.DomainContext"/>
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.SubmitChanges">
            <summary>
            Submit all pending changes to the DomainService.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.SubmitChanges(System.Object)">
            <summary>
            Submit all pending changes to the DomainService.
            </summary>
            <param name="userState">Optional user state that will be passed through on
            the <see cref="T:System.Windows.Ria.Data.SubmittedChangesEventArgs"/>.
            </param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.CompleteSubmitChanges(System.IAsyncResult)">
            <summary>
            Completes an event-based asynchronous <see cref="M:System.Windows.Ria.Data.DomainContext.SubmitChanges"/> operation.
            </summary>
            <param name="asyncResult">The asynchronous result that identifies the underlying Load operation.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.Load(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Linq.IQueryable,System.Windows.Ria.Data.MergeOption,System.Object)">
            <summary>
            Executes an asynchronous Load operation.
            </summary>
            <remarks>Check the <see cref="P:System.Windows.Ria.Data.DomainContext.IsLoading"/> property to know if this context is currently processing at least one query.</remarks>
            <param name="queryName">The name of the query to invoke.</param>
            <param name="parameters">Optional name/value collection of parameters to the method.</param>
            <param name="query">Optional query to be sent to the server for composition over the method results.</param>
            <param name="mergeOption">MergeOption to apply to this Load call.</param>
            <param name="userState">Optional user state that is also used to identify this Load operation.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.CompleteLoad(System.IAsyncResult)">
            <summary>
            Completes an event-based asynchronous <see cref="M:System.Windows.Ria.Data.DomainContext.Load(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Linq.IQueryable,System.Windows.Ria.Data.MergeOption,System.Object)"/> operation.
            </summary>
            <param name="asyncResult">The asynchronous result that identifies the underlying Load operation.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.OnLoading(System.Windows.Ria.Data.LoadingDataEventArgs)">
            <summary>
            Called after a Load operation has begun. Overrides should call the base method,
            to ensure the Loading event is raised. 
            </summary>
            <param name="e"><see cref="T:System.Windows.Ria.Data.LoadingDataEventArgs"/> event arguments.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.OnLoaded(System.Windows.Ria.Data.LoadedDataEventArgs)">
            <summary>
            Called after the Load operation is complete. Overrides should call the base method,
            to ensure the Loaded event is raised. 
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.OnSubmitting(System.Windows.Ria.Data.SubmittingChangesEventArgs)">
            <summary>
            Called after a submit operation has begun. Overrides should call the base method,
            to ensure the Submitting event is raised.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.OnSubmitted(System.Windows.Ria.Data.SubmittedChangesEventArgs)">
            <summary>
            Called after the submit operation is complete. Overrides should call the base method,
            to ensure the Submitted event is raised.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.ProcessSubmitResults(System.Windows.Ria.Data.EntityChangeSet,System.Collections.Generic.IEnumerable{System.Windows.Ria.Data.EntityOperation})">
            <summary>
            Process the submit results by handling any validation or conflict errors, performing any required
            member auto-sync, etc. If there were no errors, all changes are accepted.
            </summary>
            <param name="changeSet">The submitted changeset</param>
            <param name="entityOperationResults">The operation results returned from the submit request</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.AddEntityErrors(System.Windows.Ria.Data.Entity,System.Collections.Generic.IEnumerable{System.Web.Ria.Data.OperationError},System.Collections.Generic.Dictionary{System.Windows.Ria.Data.Entity,System.Collections.Generic.List{System.Web.Ria.Data.OperationError}},System.Boolean)">
            <summary>
            Add a list of OperationError to the entity's error collection. If
            areValidationErrors is true, the errors are added to 
            Entity.ValidationErrors. Otherwise, the errors are added to
            Entity.Errors.
            </summary>
            <param name="failedEntity">entity that has failed</param>
            <param name="errors">list of errors that have occurred during the operation</param>
            <param name="entityErrorMap">dictionary of accumulated entity error mapping</param>
            <param name="areValidationErrors">flag indicating whether these errors are validation errors</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.ApplyMemberSynchronizations(System.Collections.Generic.IEnumerable{System.Windows.Ria.Data.EntityOperation})">
            <summary>
            Apply any member synchronizations specified in the results.
            </summary>
            <param name="entityOperationResults">The operation results to process</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.InvokeServiceOperation(System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{System.Windows.Ria.Data.InvokeEventArgs},System.Object)">
            <summary>
            Immediately invokes the specified service operation.
            </summary>
            <param name="operationName">The name of the service operation to invoke.</param>
            <param name="returnType">The Type of return value for the method.</param>
            <param name="parameters">Optional name/value collection of parameters to the method.</param>
            <param name="callback">The callback to invoke when the operation completes.</param>
            <param name="userState">Optional user state.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.RaisePropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event for the indicated property
            </summary>
            <param name="propertyName">The property to raise the event for</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.AddLoadContext(System.Object,System.Windows.Ria.Data.DomainContext.LoadContext)">
            <summary>
            Adds a <see cref="T:System.Windows.Ria.Data.DomainContext.LoadContext"/>.
            </summary>
            <param name="loadContextKey">Unique identifier for the operation the specified LoadContext is for</param>
            <param name="loadContext">The see <see cref="T:System.Windows.Ria.Data.DomainContext.LoadContext"/> to add.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.RemoveLoadContext(System.Object)">
            <summary>
            Removes a <see cref="T:System.Windows.Ria.Data.DomainContext.LoadContext"/>.
            </summary>
            <param name="loadContextKey">Unique identifier for the operation to remove the LoadContext for</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.System#Windows#Ria#Data#IDomainContext#BeginLoad(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Linq.IQueryable,System.Windows.Ria.Data.MergeOption,System.AsyncCallback,System.Object)">
            <summary>
            Executes an asynchronous Load operation.
            </summary>
            <remarks>Check the <see cref="P:System.Windows.Ria.Data.DomainContext.IsLoading"/> property to know if this context is currently processing at least one query.</remarks>
            <param name="queryName">The name of the query to invoke.</param>
            <param name="parameters">Optional name/value collection of parameters to the method.</param>
            <param name="query">Optional query to be sent to the server for composition over the method results.</param>
            <param name="mergeOption">MergeOption specification to apply to this Load call.</param>
            <param name="callback">The callback to invoke when the load completed.</param>
            <param name="userState">Optional user state that is also used to identify this Load operation.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.BeginLoad(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Linq.IQueryable,System.Windows.Ria.Data.MergeOption,System.AsyncCallback,System.Object)">
            <summary>
            Executes an asynchronous Load operation.
            </summary>
            <param name="queryName">The name of the query to invoke</param>
            <param name="parameters">Optional name/value collection of parameters to the method</param>
            <param name="query">Optional query to be sent to the server for composition over the method results</param>
            <param name="mergeOption">MergeOption specification to apply to this Load call</param>
            <param name="callback">The callback to invoke when the load completed.</param>
            <param name="userState">Optional user state</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.System#Windows#Ria#Data#IDomainContext#EndLoad(System.IAsyncResult)">
            <summary>
            Completes an asynchronous load operation.
            </summary>
            <param name="asyncResult">The asynchronous result.</param>
            <returns>The load results.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.EndLoad(System.IAsyncResult)">
            <summary>
            Completes an asynchronous load operation.
            </summary>
            <param name="asyncResult">The asynchronous result.</param>
            <returns>The load results.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.System#Windows#Ria#Data#IDomainContext#CancelLoad(System.IAsyncResult)">
            <summary>
            Cancels an asynchronous load operation.
            </summary>
            <param name="asyncResult">The asynchronous result.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.CancelLoad(System.IAsyncResult)">
            <summary>
            Cancels an asynchronous load operation.
            </summary>
            <param name="asyncResult">The asynchronous result.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.System#Windows#Ria#Data#IDomainContext#BeginSubmitChanges(System.AsyncCallback,System.Object)">
            <summary>
            Submit all pending changes to the DomainService.
            </summary>
            <param name="callback">The callback to invoke when the submit completed.</param>
            <param name="userState">Optional user state that will be passed through on
            the <see cref="T:System.Windows.Ria.Data.SubmittedChangesEventArgs"/>.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.BeginSubmitChanges(System.AsyncCallback,System.Object)">
            <summary>
            Submit all pending changes to the DomainService.
            </summary>
            <param name="callback">The callback to invoke when the submit has completed.</param>
            <param name="userState">Optional user state that will be passed through on
            the <see cref="T:System.Windows.Ria.Data.SubmittedChangesEventArgs"/>.</param>
            <returns>The asynchronous result.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.System#Windows#Ria#Data#IDomainContext#EndSubmitChanges(System.IAsyncResult)">
            <summary>
            Completes an asynchronous submit operation.
            </summary>
            <param name="asyncResult">The asynchronous result.</param>
            <returns>The submit-changes results.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.EndSubmitChanges(System.IAsyncResult)">
            <summary>
            Completes an asynchronous submit operation.
            </summary>
            <param name="asyncResult">The asynchronous result.</param>
            <returns>The submit-changes results.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.System#Windows#Ria#Data#IDomainContext#CancelSubmitChanges(System.IAsyncResult)">
            <summary>
            Cancels an asynchronous submit operation.
            </summary>
            <param name="asyncResult">The asynchronous result.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.CancelSubmitChanges(System.IAsyncResult)">
            <summary>
            Cancels an asynchronous submit operation.
            </summary>
            <param name="asyncResult">The asynchronous result.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.System#Windows#Ria#Data#IDomainContext#GetItems(System.Type)">
            <summary>
            Gets the entities of the specified type.
            </summary>
            <param name="entityType">An entity type.</param>
            <returns>A list of entities.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainContext.GetItems(System.Type)">
            <summary>
            Gets the entities of the specified type.
            </summary>
            <param name="entityType">An entity type.</param>
            <returns>A list of entities.</returns>
        </member>
        <member name="E:System.Windows.Ria.Data.DomainContext.PropertyChanged">
            <summary>
            Event raised whenever a <see cref="T:System.Windows.Ria.Data.DomainContext"/> property changes
            </summary>
        </member>
        <member name="E:System.Windows.Ria.Data.DomainContext.Loading">
            <summary>
            Event raised after a Load operation has begun
            </summary>
        </member>
        <member name="E:System.Windows.Ria.Data.DomainContext.Loaded">
            <summary>
            Event raised after a Load operation has completed.
            </summary>
        </member>
        <member name="E:System.Windows.Ria.Data.DomainContext.Submitting">
            <summary>
            Event raised after a SubmitChanges operation has begun.
            </summary>
        </member>
        <member name="E:System.Windows.Ria.Data.DomainContext.Submitted">
            <summary>
            Event raised after a SubmitChanges operation has completed.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.DomainContext.DomainClient">
            <summary>
            Gets the DomainClient for this context, performing any
            required initialization
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.DomainContext.IsLoading">
            <summary>
            Gets a value indicating whether this context is currently performing a Load operation.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.DomainContext.IsSubmitting">
            <summary>
            Gets a value indicating whether this context is currently performing a SubmitChanges operation.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.DomainContext.Entities">
            <summary>
            Gets the <see cref="T:System.Windows.Ria.Data.EntityContainer"/> holding all entities loaded by this context.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.DomainContext.HasChanges">
            <summary>
            Gets a value indicating whether this context has any pending changes
            </summary>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.AuthenticationBase.#ctor(System.Windows.Ria.Data.DomainClient)">
            <summary>
            Protected constructor
            </summary>
            <param name="domainClient">The <see cref="T:System.Windows.Ria.Data.DomainClient"/> instance this <see cref="T:System.Windows.Ria.ApplicationServices.AuthenticationBase"/> should use</param>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.AuthenticationBase.InternalInvokeServiceOperation(System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{System.Windows.Ria.Data.InvokeEventArgs},System.Object)">
            <summary>
            Allows <c>InvokeServiceOperation</c> to be invoked by internal classes.
            </summary>
            <remarks>
            This method is virtual to allow unit test mocking. By default, it
            simply calls <c>InvokeOnline</c>. It is used by 
            <see cref="T:System.Windows.Ria.ApplicationServices.WebUserService"/>.
            </remarks>
            <param name="name">The service operation name</param>
            <param name="returnType">The return type of the service operation</param>
            <param name="parameters">The parameters of the service operation</param>
            <param name="callback">The callback to call on completion</param>
            <param name="userState">The user state</param>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.AuthenticationBase.InternalCancel">
            <summary>
            Allows <c>Cancel</c> to be mocked for unit testing.
            </summary>
            <remarks>
            This is used by <see cref="T:System.Windows.Ria.ApplicationServices.WebUserService"/> and calls <c>Cancel</c>
            by default.
            </remarks>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.AuthenticationBase.UserType">
            <summary>
            Gets the type of the user entity.
            </summary>
            <remarks>
            Since the user type is only declared in the generated class, this accessor
            allows the <see cref="T:System.Windows.Ria.ApplicationServices.WebUserService"/> and the <see cref="T:System.Windows.Ria.ApplicationServices.UserSerializer"/>
            to deal take type-specific actions.
            </remarks>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.AuthenticationBase.UserList">
            <summary>
            Gets the <see cref="T:System.Windows.Ria.Data.EntityList"/> for the user entity.
            </summary>
            <remarks>
            This allows <see cref="T:System.Windows.Ria.ApplicationServices.WebUserService"/> to deal with users in a
            type-agnostic way.
            </remarks>
        </member>
        <member name="T:System.Windows.Ria.ApplicationServices.EventArgsBuilder">
            <summary>
            Builder class for immutable event args.
            </summary>
            <remarks>
            This class builds 
            <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/>,
            <see cref="T:System.Windows.Ria.ApplicationServices.LoginCompletedEventArgs"/>,
            <see cref="T:System.Windows.Ria.ApplicationServices.LogoutCompletedEventArgs"/>,
            <see cref="T:System.Windows.Ria.ApplicationServices.LoadUserCompletedEventArgs"/>, and
            <see cref="T:System.Windows.Ria.ApplicationServices.SaveUserCompletedEventArgs"/>.
            </remarks>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.EventArgsBuilder.BuildAsyncCompleted">
            <summary>
            Constructs a new <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> from the builder properties.
            </summary>
            <returns>A new <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/></returns>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.EventArgsBuilder.BuildLoginCompleted">
            <summary>
            Constructs a new <see cref="T:System.Windows.Ria.ApplicationServices.LoginCompletedEventArgs"/> from the builder properties.
            </summary>
            <returns>A new <see cref="T:System.Windows.Ria.ApplicationServices.LoginCompletedEventArgs"/></returns>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.EventArgsBuilder.BuildLogoutCompleted">
            <summary>
            Constructs a new <see cref="T:System.Windows.Ria.ApplicationServices.LogoutCompletedEventArgs"/> from the builder properties.
            </summary>
            <returns>A new <see cref="T:System.Windows.Ria.ApplicationServices.LogoutCompletedEventArgs"/></returns>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.EventArgsBuilder.BuildLoadUserCompleted">
            <summary>
            Constructs a new <see cref="T:System.Windows.Ria.ApplicationServices.LoadUserCompletedEventArgs"/> from the builder properties.
            </summary>
            <returns>A new <see cref="T:System.Windows.Ria.ApplicationServices.LoadUserCompletedEventArgs"/></returns>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.EventArgsBuilder.BuildSaveUserCompleted">
            <summary>
            Constructs a new <see cref="T:System.Windows.Ria.ApplicationServices.SaveUserCompletedEventArgs"/> from the builder properties.
            </summary>
            <returns>A new <see cref="T:System.Windows.Ria.ApplicationServices.SaveUserCompletedEventArgs"/></returns>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.EventArgsBuilder.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString"/> to present more detail about the builder
            </summary>
            <returns>
            A string representation of the builder
            </returns>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.EventArgsBuilder.Error">
            <summary>
            Gets or sets the <code>error</code> value for constructing an <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/>
            </summary>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.EventArgsBuilder.Canceled">
            <summary>
            Gets or sets a value indicating whether the async event was canceled. This will be used as the 
            <code>cancelled</code> value for constructing an <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/>.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.EventArgsBuilder.UserState">
            <summary>
            Gets or sets the <code>userState</code> value for constructing an <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/>
            </summary>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.EventArgsBuilder.LoginSuccess">
            <summary>
            Gets or sets a value indicating whether the login event was successful. This will be used as the
            <code>loginSuccess</code> value for constructing a <see cref="T:System.Windows.Ria.ApplicationServices.LoginCompletedEventArgs"/>
            </summary>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.EventArgsBuilder.LoginParameters">
            <summary>
            Gets or sets the <code>loginParameters</code> value for constructing a <see cref="T:System.Windows.Ria.ApplicationServices.LoginCompletedEventArgs"/>
            </summary>
        </member>
        <member name="T:System.Windows.Ria.ApplicationServices.Identity">
            <summary>
            Default implementation of <see cref="T:System.Security.Principal.IIdentity"/>.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.Identity.#ctor">
            <summary>
            Initializes a new instance of the Identity class with default values.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.Identity.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the Identity class with the specified properties.
            </summary>
            <param name="authenticationType">The identity authentication type</param>
            <param name="isAuthenticated">Whether the identity is authenticated</param>
            <param name="name">The identity name</param>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.Identity.Default">
            <summary>
            Gets the default identity.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.Identity.AuthenticationType">
            <summary>
            Gets the authentication type. See <see cref="P:System.Security.Principal.IIdentity.AuthenticationType"/>.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.Identity.IsAuthenticated">
            <summary>
            Gets a value indicating whether the identity is authenticated. See
            <see cref="P:System.Security.Principal.IIdentity.IsAuthenticated"/>.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.Identity.Name">
            <summary>
            Gets the name. See <see cref="P:System.Security.Principal.IIdentity.Name"/>.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.ApplicationServices.UserBase">
            <summary>
            Representation of an authenticated identity.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.Entity">
            <summary>
            Base class for all client entity types
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.#ctor">
            <summary>
            Protected constructor since this is an abstract class
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.GetOriginal">
            <summary>
            Gets the original state for this entity.
            </summary>
            <returns>The entity in its original state if there is any original state. Null otherwise.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.Reset">
            <summary>
            Resets internal entity state. For example, when the entity is 
            being attached (or reattached) to a list.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.StartTracking">
            <summary>
            Begin change tracking this entity
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.StopTracking">
            <summary>
            Stop change tracking this entity
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.AcceptChanges">
            <summary>
            Accept the current changes to this <see cref="T:System.Windows.Ria.Data.Entity"/> applying the proper
            state transition
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.RejectChanges">
            <summary>
            Revert all property changes made to this entity back to their original values. This method
            does not revert <see cref="T:System.Windows.Ria.Data.EntityList"/> Add/Remove operations, so if this <see cref="T:System.Windows.Ria.Data.Entity"/>
            is New or Deleted, this method does nothing. This method also reverts any pending domain
            method invocation on the entity.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.GetDataMembers">
            <summary>
            Gets the set of persistent data members for this Entity.
            </summary>
            <returns>The set of data members</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.GetKeyMembers">
            <summary>
            Gets the members marked [Key] for this Entity.
            </summary>
            <returns>The set of key members</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.ApplyState(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Apply the specified state to this entity instance using the OverwriteCurrentValues
            merge strategy and normal change tracking.
            </summary>
            <param name="entityStateToApply">The state to apply</param>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.Merge(System.Windows.Ria.Data.Entity,System.Windows.Ria.Data.MergeOption)">
            <summary>
            Merge differs from ApplyState in that its the merge of an entire
            entity as opposed to an arbitrary set (possibly subset) of values.
            Change tracking is suspended for the entity during the merge.
            </summary>
            <param name="otherEntity">The entity to merge into the current instance</param>
            <param name="mergeOption">The merge strategy to use</param>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.PropertyHasChanged(System.Reflection.PropertyInfo)">
            <summary>
            Returns true if the specified property has been modified
            </summary>
            <param name="prop">The property to check</param>
            <returns>true if the specified property has been modified</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.PropertyHasChanged(System.String)">
            <summary>
            Returns true if the specified property has been modified
            </summary>
            <param name="propertyName">The property to check</param>
            <returns>true if the specified property has been modified</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when an <see cref="T:System.Windows.Ria.Data.Entity"/> property has changed.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.RaiseDataMemberChanged(System.String)">
            <summary>
            Called from a property setter to notify the framework that an
            <see cref="T:System.Windows.Ria.Data.Entity"/> data member has changed. This method performs 
            any required change tracking and state transitions.
            </summary>
            <param name="propertyName">The name of the property that has changed</param>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.RaisePropertyChanged(System.String)">
            <summary>
            Called from a property setter to notify the framework that an
            <see cref="T:System.Windows.Ria.Data.Entity"/> member has changed. This method does not
            perform any change tracking operations.
            </summary>
            <param name="propertyName">The name of the property that has changed</param>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.RaiseDataMemberChanging(System.String)">
            <summary>
            Called from a property setter to notify the framework that an
            <see cref="T:System.Windows.Ria.Data.Entity"/> data member is about to be changed. This
            method performs any required change tracking and state transition
            operations.
            </summary>
            <param name="propertyName">The name of the property that is changing</param>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.ValidateProperty(System.String,System.Object)">
            <summary>
            Validate whether the specified value is valid for the specified property
            of the current Entity.
            </summary>
            <remarks>
            This method evaluates all the <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>s associated with the specified property
            and throws a <see cref="T:System.ComponentModel.DataAnnotations.ValidationException"/> for the first one that signals a validation error.  It also verifies
            the property is not readonly.
            <para>All validation logic is bypassed if this entity is currently being deserialized.</para>
            </remarks>
            <param name="propertyName">The name of the property on this entity to set.  This name cannot be null or empty.</param>
            <param name="value">The value to test. It may be null if null is valid for the given property</param>
            <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException"> is thrown if this value is not valid for the specified property.</exception>
            <exception cref="T:System.InvalidOperationException"> is thrown if this property is marked [ReadOnly(true)]</exception>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.OnActionStateChanged">
            <summary>
            Method called when the invoked action state changes
            for this entity. 
            </summary>
            <remarks>
            This method is called when the state of CanInvoke 
            changes.</remarks>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.BeginEdit">
            <summary>
            Begin editing this entity
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.CancelEdit">
            <summary>
            Cancel any edits made to this entity since the last call
            to BeginEdit
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.EndEdit">
            <summary>
            Commit the edits made to this entity since the last call
            to BeginEdit
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.InvokeAction(System.String,System.Object[])">
            <summary>
            Called to register an action to be invoked for this entity during SubmitChanges.
            <see cref="T:System.InvalidOperationException"/> is thrown if the domain method invocation
            violates any framework constraints. <see cref="T:System.ComponentModel.DataAnnotations.ValidationException"/> is thrown if
            any validation on this object, the domain method or the specified parameters fails.
            </summary>
            <param name="actionName">The name of the action to invoke</param>
            <param name="parameters">The list of parameters values to invoke the specified action with</param>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.CanInvokeAction(System.String)">
            <summary>
            Gets a value indicating whether the specified action can currently be invoked. 
            </summary>
            <remarks>This property does not actually invoke Validation 
            because we cannot guarantee property changed events
            are raised whenever this state changes. Validation will
            be executed as part of Invoke.</remarks>
            <param name="name">The name of the action corresponding to a domain method</param>
            <returns>True if the action can currently be invoked</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.GetIdentity">
            <summary>
            Return the entity identity, suitable for hashing.
            </summary>
            <returns>the identity of this entity</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.ToString">
            <summary>
            Returns a string representation of the current entity.
            </summary>
            <returns>A string representation of the current entity</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.RegisterListChangedCallback(System.Action)">
            <summary>
            Register a callback that will be called any time this entity is
            added or removed from an entity list
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begin editing this entity
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Cancel the edits made to this entity since the last call
            to BeginEdit
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Commit the edits made to this entity since the last call
            to BeginEdit
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.System#ComponentModel#IRevertibleChangeTracking#RejectChanges">
            <summary>
            Reject all changes made to this Entity
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.System#ComponentModel#IChangeTracking#AcceptChanges">
            <summary>
            Accept all changes made to this Entity
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Method called after this entity has been deserialized
            </summary>
            <param name="context">The serialization context</param>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.OnDeserializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Method called when this entity is being deserialized
            </summary>
            <param name="context">The serialization context</param>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.Conflict">
            <summary>
            Gets conflict information for this entity after a submit
            operation. Returns null if there are no conflicts.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.IsEditing">
            <summary>
            Gets a value indicating whether there is currently an uncommitted
            edit session in progress for this entity. This is the case when
            BeginEdit has been called, but EndEdit/CancelEdit have not.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.IsInferred">
            <summary>
            Gets or sets a value indicating whether the current entity state
            has been inferred
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.ValidationErrors">
            <summary>
            Gets the collection of validation errors encountered during the last submit operation. 
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.HasValidationErrors">
            <summary>
            Gets a value indicating whether there were any validation errors encountered during the last submit operation.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.Errors">
            <summary>
            Gets the collection of domain operation execution errors encountered 
            during the last submit operation. 
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.HasErrors">
            <summary>
            Gets a value indicating whether there were any domain operation execution errors 
            encountered during the last submit operation.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.EntityState">
            <summary>
            Gets the current state of this <see cref="T:System.Windows.Ria.Data.Entity"/>
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.HasPropertyChanges">
            <summary>
            Gets a value indicating whether this entity currently has any
            data member updates
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.ModifiedProperties">
            <summary>
            Gets the collection of properties that are currently modified
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.List">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Ria.Data.EntityList"/> this <see cref="T:System.Windows.Ria.Data.Entity"/> is a member of. The value will be null
            if the entity is not attached.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.LastList">
            <summary>
            Gets the last list that this entity was attached to, possibly
            returning null
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.DomainMethodInvocation">
            <summary>
            Gets or sets the domain method invocation on this entity (if any)
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.OriginalValues">
            <summary>
            Gets the original values of this Entity's properties before modification
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.HasChanges">
            <summary>
            Gets a value indicating whether this entity currently has any pending changes
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.IsDeserializing">
            <summary>
            Gets a value indicating whether the current entity is currently being deserialized
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.IsReadOnly">
            <summary>
            Gets a value indicating whether the current entity is read-only.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.IsSubmitting">
            <summary>
            Gets or sets a value indicating whether the entity is part of a submit in progress.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.Actions">
            <summary>
            Gets the list of domain method invocations pending for this entity 
            in the current changeset. The current implementation only supports 
            a single pending invocation.
            </summary>
            <returns>list of domain method invocations pending for this entity</returns>
        </member>
        <member name="E:System.Windows.Ria.Data.Entity.PropertyChanged">
            <summary>
            Event raised whenever an <see cref="T:System.Windows.Ria.Data.Entity"/> property has changed
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.System#ComponentModel#IChangeTracking#IsChanged">
            <summary>
            Gets a value indicating whether this Entity currently has any pending changes
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.Entity.EditSession">
            <summary>
            Class used to capture state related to an entity Edit session
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.EditSession.LastState">
            <summary>
            Gets or sets the state of the entity when the session began
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.EditSession.Snapshot">
            <summary>
            Gets or sets the Snapshot of current entity values before any 
            modifications are made in the session
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Entity.EditSession.DomainMethodInvocation">
            <summary>
            Gets or sets the domain method invocation that was in place at the
            time the edit session started
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.Entity.EntityAssociationChangeAcceptor">
            <summary>
            Class used to visit all association members on an entity and AcceptChanges
            on any state tracking those members were performing
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.EntityVisitor">
            <summary>
            Visits all EntityCollection/EntityRef members of an entity, allowing
            subclasses to perform work in overridden methods.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityVisitor.Visit(System.Windows.Ria.Data.Entity)">
            <summary>
            Visit members of the entity, calling the corresponding visit methods for each
            </summary>
            <param name="entity">The entity to visit</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityVisitor.VisitEntityCollection(System.Windows.Ria.Data.IEntityCollection,System.Reflection.PropertyInfo)">
            <summary>
            Visit the specified <see cref="T:System.Windows.Ria.Data.IEntityCollection"/>.
            </summary>
            <param name="entityCollection">The <see cref="T:System.Windows.Ria.Data.IEntityCollection"/>.</param>
            <param name="propertyInfo">The <see cref="T:System.Reflection.PropertyInfo"/> for the collection member.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityVisitor.VisitEntityRef(System.Windows.Ria.Data.Entity,System.Windows.Ria.Data.Entity,System.Reflection.PropertyInfo)">
            <summary>
            Visit an <see cref="T:System.Windows.Ria.Data.EntityRef`1"/> member
            </summary>
            <param name="referenced">The current value of the reference</param>
            <param name="parent">The parent of the reference member</param>
            <param name="propertyInfo">The <see cref="T:System.Reflection.PropertyInfo"/> for the reference member</param>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.EntityAssociationChangeAcceptor.Accept(System.Windows.Ria.Data.Entity)">
            <summary>
            Accept changes for all association members on the specified entity
            </summary>
            <param name="entity">The entity</param>
        </member>
        <member name="M:System.Windows.Ria.Data.Entity.EntityAssociationChangeAcceptor.VisitEntityCollection(System.Windows.Ria.Data.IEntityCollection,System.Reflection.PropertyInfo)">
            <summary>
            Visit the collection
            </summary>
            <param name="entityCollection">The collection being visited</param>
            <param name="propertyInfo">The <see cref="T:System.Reflection.PropertyInfo"/> for the member</param>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserBase.#ctor">
            <summary>
            Initializes a new instance of the UserBase class.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserBase.IsInRole(System.String)">
            <summary>
            Return whether the principal is in the role. See <see cref="M:System.Security.Principal.IPrincipal.IsInRole(System.String)"/>.
            </summary>
            <remarks>
            Returns whether the specified role is contained in the roles.
            This implementation is case sensitive.
            </remarks>
            <param name="role"></param>
            <returns>Whether the principal is in the role. See <see cref="M:System.Security.Principal.IPrincipal.IsInRole(System.String)"/>.
            </returns>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserBase.System#Security#Principal#IPrincipal#IsInRole(System.String)">
            <summary>
            Return whether the principal is in the role. See <see cref="M:System.Security.Principal.IPrincipal.IsInRole(System.String)"/>.
            </summary>
            <remarks>
            Returns whether the specified role is contained in the roles.
            This implementation is case sensitive.
            </remarks>
            <param name="role"></param>
            <returns>Whether the principal is in the role. See <see cref="M:System.Security.Principal.IPrincipal.IsInRole(System.String)"/>.
            </returns>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.UserBase.AuthenticationType">
            <summary>
            Gets or sets the authentication type. See <see cref="P:System.Security.Principal.IIdentity.AuthenticationType"/>.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.UserBase.IsAuthenticated">
            <summary>
            Gets or sets a value indicating whether the identity is authenticated. See
            <see cref="P:System.Security.Principal.IIdentity.IsAuthenticated"/>.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.UserBase.Name">
            <summary>
            Gets or sets the name. See <see cref="P:System.Security.Principal.IIdentity.Name"/>.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.UserBase.Roles">
            <summary>
            Gets the roles the user is a member of.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.UserBase.System#Security#Principal#IPrincipal#Identity">
            <summary>
            Gets the principal. See <see cref="P:System.Security.Principal.IPrincipal.Identity"/>.
            </summary>
        </member>
        <member name="T:System.Web.Ria.Data.AssociatedEntities">
            <summary>
            Represents a collection of changeset Ids for an Entity association
            </summary>
        </member>
        <member name="P:System.Web.Ria.Data.AssociatedEntities.Name">
            <summary>
            Name of the association member
            </summary>
        </member>
        <member name="P:System.Web.Ria.Data.AssociatedEntities.Ids">
            <summary>
            Collection of Ids for the associated entities
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.ChangeSetBuilder">
            <summary>
            Takes a changeset and builds the corresponding set of <see cref="T:System.Windows.Ria.Data.EntityOperation"/>s
            that should be sent to the server
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.ChangeSetBuilder.Build(System.Windows.Ria.Data.EntityChangeSet)">
            <summary>
            Build the operation list for the specified changeset
            </summary>
            <param name="changeSet">The changeset</param>
            <returns>The list of operations</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.ChangeSetBuilder.BuildOperations(System.Windows.Ria.Data.EntityChangeSet)">
            <summary>
            Builds the list of submit operations from the current change set
            </summary>
            <param name="changeSet">The changeset to process</param>
            <returns>The list of operations</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.ChangeSetBuilder.CheckForInvalidUpdates(System.Windows.Ria.Data.EntityChangeSet)">
            <summary>
            Verify that all update operations in the specified changeset are permitted.
            </summary>
            <param name="changeSet">The changeset to check</param>
        </member>
        <member name="T:System.Windows.Ria.Data.AssociationMapBuilder">
            <summary>
            Visits all association members of entities in a changeset, setting the
            association maps for each
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.AssociationMapBuilder.Build(System.Collections.Generic.List{System.Windows.Ria.Data.EntityOperation})">
            <summary>
            Build the association maps for the specified changeset. The goal is to ensure that for all Association
            members in the changeset that reference other entities in the changeset by reference or by FK values,
            these associations are added to the Association map for the parent entities.
            </summary>
            <param name="entityOperations">The changeset operations</param>
        </member>
        <member name="M:System.Windows.Ria.Data.AssociationMapBuilder.#ctor(System.Collections.Generic.List{System.Windows.Ria.Data.EntityOperation})">
            <summary>
            Private constructor
            </summary>
            <param name="entityOperations">The changeset operations</param>
        </member>
        <member name="M:System.Windows.Ria.Data.AssociationMapBuilder.Build">
            <summary>
            Build and set the association maps for all operations in the specified changeset
            </summary>
        </member>
        <member name="T:System.Web.Ria.Data.DataServiceResult">
            <summary>
            Message type used to communicate request results between server and client.
            </summary>
        </member>
        <member name="M:System.Web.Ria.Data.DataServiceResult.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:System.Web.Ria.Data.DataServiceResult.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Constructs a result with the specified collection of result items
            </summary>
            <param name="results">The results</param>
        </member>
        <member name="M:System.Web.Ria.Data.DataServiceResult.#ctor(System.Collections.Generic.IEnumerable{System.Object},System.Int32)">
            <summary>
            Constructs a result with the specified collection of result items
            </summary>
            <param name="results">The results</param>
            <param name="totalCount">The total number of rows based on the input query, but without 
            any paging applied to it.</param>
        </member>
        <member name="P:System.Web.Ria.Data.DataServiceResult.IsDomainServiceException">
            <summary>
            Gets or sets a value indicating whether the error was a <see cref="T:System.Web.Ria.Data.DomainServiceException"/>. If the value is true, it indicates that
            the error should be reconstructed on the client as that exception type.
            </summary>
        </member>
        <member name="P:System.Web.Ria.Data.DataServiceResult.IsError">
            <summary>
            Gets a value indicating whether this result represents an error condition.
            </summary>
        </member>
        <member name="P:System.Web.Ria.Data.DataServiceResult.ErrorCode">
            <summary>
            Gets or sets the custom code for the error.
            </summary>
        </member>
        <member name="P:System.Web.Ria.Data.DataServiceResult.ErrorMessage">
            <summary>
            Gets or sets the message giving details on the error.
            </summary>
        </member>
        <member name="P:System.Web.Ria.Data.DataServiceResult.StackTrace">
            <summary>
            Gets or sets the stack trace for the error.
            </summary>
        </member>
        <member name="P:System.Web.Ria.Data.DataServiceResult.Results">
            <summary>
            Gets or sets the results for the service request
            </summary>
        </member>
        <member name="P:System.Web.Ria.Data.DataServiceResult.ReturnValue">
            <summary>
            Gets or sets the return value of an service operation
            </summary>
        </member>
        <member name="P:System.Web.Ria.Data.DataServiceResult.TotalCount">
            <summary>
            Gets or sets the total number of rows for the original query without any paging applied to it.
            If the value is -1, the server did not support total-counts. If it's -2, the total-count 
            is the same as the number of entities in the result-set.
            </summary>
        </member>
        <member name="P:System.Web.Ria.Data.DataServiceResult.ValidationErrors">
            <summary>
            Gets or sets the validation errors that occurred during this request.
            </summary>
            <remarks>This is only used when a request invokes a single method, such as a service operation.</remarks>
        </member>
        <member name="T:System.Windows.Ria.Data.EntityCollectionChangedEventArgs`1">
            <summary>
            Event arguments for strongly typed add/remove notifications for collections
            containing entities.
            </summary>
            <typeparam name="TEntity">The <see cref="P:System.Windows.Ria.Data.EntityCollectionChangedEventArgs`1.Entity"/> type</typeparam>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityCollectionChangedEventArgs`1.#ctor(`0)">
            <summary>
            Public constructor
            </summary>
            <param name="entity">The affected <see cref="P:System.Windows.Ria.Data.EntityCollectionChangedEventArgs`1.Entity"/></param>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityCollectionChangedEventArgs`1.Entity">
            <summary>
            The affected <see cref="P:System.Windows.Ria.Data.EntityCollectionChangedEventArgs`1.Entity"/>
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.EntityOperationType">
            <summary>
            Enumeration of the types of operations that can be performed on an <see cref="T:System.Windows.Ria.Data.Entity"/>
            </summary>
        </member>
        <member name="F:System.Windows.Ria.Data.EntityOperationType.Insert">
            <summary>
            Indicates an insert operation for a new <see cref="T:System.Windows.Ria.Data.Entity"/>
            </summary>
        </member>
        <member name="F:System.Windows.Ria.Data.EntityOperationType.Update">
            <summary>
            Indicates an update operation for an existing <see cref="T:System.Windows.Ria.Data.Entity"/>
            </summary>
        </member>
        <member name="F:System.Windows.Ria.Data.EntityOperationType.Delete">
            <summary>
            Indicates a delete operation for an existing <see cref="T:System.Windows.Ria.Data.Entity"/>
            </summary>
        </member>
        <member name="F:System.Windows.Ria.Data.EntityOperationType.Custom">
            <summary>
            Indicates a custom domain operation that operates on an <see cref="T:System.Windows.Ria.Data.Entity"/> in a deferred manner
            </summary>
        </member>
        <member name="T:System.Web.Ria.Data.ExternalAttribute">
            <summary>
            When applied to an entity association member, this attribute indicates that the framework should not
            create a corresponding EntityList in the generated client-side code output.  Consumers of the
            client-side property will need to add a DomainContext reference to the appropriate DomainContext
            containing the external entity type.
            </summary>
        </member>
        <member name="T:System.Web.Ria.Data.LoadMethodAttribute">
            <summary>
            Used to specify additional metadata for a load method.
            </summary>
        </member>
        <member name="M:System.Web.Ria.Data.LoadMethodAttribute.#ctor(System.Type)">
            <summary>
            Public constructor
            </summary>
            <param name="entityType">The type of entity the method loads.</param>
        </member>
        <member name="P:System.Web.Ria.Data.LoadMethodAttribute.EntityType">
            <summary>
            Gets the type of entity the method loads.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.DomainClient">
            <summary>
            Base class for all <see cref="T:System.Windows.Ria.Data.DomainClient"/> implementations. A <see cref="T:System.Windows.Ria.Data.DomainClient"/> is
            used to communicate with a data source asynchronously, providing query, method invocation
            and changeset submission functionality.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainClient.BeginQuery(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Linq.IQueryable,System.AsyncCallback,System.Object)">
            <summary>
            Executes an asynchronous query operation.
            </summary>
            <param name="queryName">The name of the query to invoke.</param>
            <param name="parameters">Optional name/value collection of parameters to the method.</param>
            <param name="query">Optional query to be sent to the server for composition over the method results.</param>
            <param name="callback">The callback to invoke when the query has been executed.</param>
            <param name="userState">Optional user state associated with this operation.</param>
            <returns>An asynchronous result that identifies this query.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainClient.BeginQueryCore(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Linq.IQueryable,System.AsyncCallback,System.Object)">
            <summary>
            Method called by the framework to begin the asynchronous query operation
            </summary>
            <param name="queryName">The name of the query to invoke.</param>
            <param name="parameters">Optional name/value collection of parameters to the method.</param>
            <param name="query">Optional query to be sent to the server for composition over the method results.</param>
            <param name="callback">The callback to invoke when the query has been executed.</param>
            <param name="userState">Optional user state associated with this operation.</param>
            <returns>An asynchronous result that identifies this query.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainClient.EndQuery(System.IAsyncResult)">
            <summary>
            Gets the results of an asynchronous query operation.
            </summary>
            <param name="asyncResult">An asynchronous result that identifies a query.</param>
            <returns>The results returned by the query.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainClient.EndQueryCore(System.IAsyncResult)">
            <summary>
            Method called by the framework to complete the asynchronous query operation
            </summary>
            <param name="asyncResult">An asynchronous result that identifies a query.</param>
            <returns>The results returned by the query.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainClient.BeginSubmit(System.Windows.Ria.Data.EntityChangeSet,System.AsyncCallback,System.Object)">
            <summary>
            Submits the specified change set to the domain service asynchronously.
            </summary>
            <param name="changeSet">The <see cref="T:System.Windows.Ria.Data.EntityChangeSet"/> to submit to the domain service.</param>
            <param name="callback">The callback to invoke when the submit has been executed.</param>
            <param name="userState">Optional user state associated with this operation.</param>
            <returns>An asynchronous result that identifies this submit request.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainClient.BeginSubmitCore(System.Windows.Ria.Data.EntityChangeSet,System.Collections.Generic.IEnumerable{System.Windows.Ria.Data.EntityOperation},System.AsyncCallback,System.Object)">
            <summary>
            Method called by the framework to asynchronously process the specified changeset.
            </summary>
            <param name="changeSet">The <see cref="T:System.Windows.Ria.Data.EntityChangeSet"/> to submit to the domain service.</param>
            <param name="submitOperations">The set of <see cref="T:System.Windows.Ria.Data.EntityOperation"/>s for the <see cref="T:System.Windows.Ria.Data.EntityChangeSet"/></param>
            <param name="callback">The callback to invoke when the submit has been executed.</param>
            <param name="userState">Optional user state associated with this operation.</param>
            <returns>An asynchronous result that identifies this submit request.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainClient.EndSubmit(System.IAsyncResult)">
            <summary>
            Gets the results of a submit.
            </summary>
            <param name="asyncResult">An asynchronous result that identifies a submit request.</param>
            <returns>The results returned by the submit request.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainClient.EndSubmitCore(System.IAsyncResult)">
            <summary>
            Method called by the framework to complete an asynchronous submit operation
            </summary>
            <param name="asyncResult">An asynchronous result that identifies a submit request.</param>
            <returns>The results returned by the submit request.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainClient.BeginInvoke(System.Object,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
            <summary>
            Invokes a service operation asynchronously.
            </summary>
            <param name="instance">The instance on which the method was called client-side.</param>
            <param name="operationName">The name of the operation to invoke.</param>
            <param name="returnType">The Type of return value for the method.</param>
            <param name="parameters">Optional name/value collection of parameters to the method.</param>
            <param name="callback">The callback to invoke when the invocation has been completed.</param>
            <param name="userState">Optional user state associated with this operation.</param>
            <returns>An asynchronous result that identifies this invocation.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainClient.BeginInvokeCore(System.Object,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
            <summary>
            Method called by the framework to invoke a service operation asynchronously.
            </summary>
            <param name="instance">The instance on which the method was called client-side.</param>
            <param name="methodName">The name of the method to invoke.</param>
            <param name="returnType">The Type of return value for the method.</param>
            <param name="parameters">Optional name/value collection of parameters to the method.</param>
            <param name="callback">The callback to invoke when the invocation has been completed.</param>
            <param name="userState">Optional user state associated with this operation.</param>
            <returns>An asynchronous result that identifies this invocation.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainClient.EndInvoke(System.IAsyncResult)">
            <summary>
            Gets the results of a service operation invocation.
            </summary>
            <param name="asyncResult">An asynchronous result that identifies an invocation.</param>
            <returns>The results returned by the invocation.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainClient.EndInvokeCore(System.IAsyncResult)">
            <summary>
            Method called by the framework to complete an asynchronous invocation
            </summary>
            <param name="asyncResult">An asynchronous result that identifies an invocation.</param>
            <returns>The results returned by the invocation.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainClient.ValidateSubmitOperations(System.Collections.Generic.List{System.Windows.Ria.Data.EntityOperation})">
            <summary>
            Validates the specified submit operations.
            </summary>
            <param name="operations">List of operations to validate against</param>
            <returns>True if all the operations in the specified list are valid</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.DomainClient.ValidateMethodCall(System.Object,System.String,System.ComponentModel.DataAnnotations.ValidationContext,System.Object[],System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            Validates a method call.
            </summary>
            <param name="instance">The instance on which we are calling the method.</param>
            <param name="methodName">The method to validate.</param>
            <param name="validationContext">The context describing the method to invoke.</param>
            <param name="parameters">The parameters to pass to the method.</param>
            <param name="validationResults">The list to which we can append validation results.</param>
            <returns>True if the parameters are valid.</returns>
        </member>
        <member name="P:System.Windows.Ria.Data.DomainClient.EntityTypes">
            <summary>
            Gets or sets the collection of Entity Types this <see cref="T:System.Windows.Ria.Data.DomainClient"/> will operate on.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.LoadedDataEventArgs">
            <summary>
            Event arguments for the completion of a load operation
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.LoadedDataEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ria.Data.Entity},System.Collections.Generic.IEnumerable{System.Windows.Ria.Data.Entity},System.Int32,System.Exception,System.Boolean,System.Object)">
            <summary>
            Public constructor
            </summary>
            <param name="loadedEntities">The loaded entities</param>
            <param name="allLoadedEntities">The loaded entities including those loaded as associations.</param>
            <param name="totalCount">The total number of rows for the original query without any paging applied to it.</param>
            <param name="error">Exception for the load operation if it failed</param>
            <param name="canceled">True if the load operation was canceled, false otherwise</param>
            <param name="userState">Optional user state</param>
        </member>
        <member name="P:System.Windows.Ria.Data.LoadedDataEventArgs.LoadedEntities">
            <summary>
            Gets the loaded entities.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.LoadedDataEventArgs.AllLoadedEntities">
            <summary>
            Gets the loaded entities including those loaded as associations.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.LoadedDataEventArgs.TotalCount">
            <summary>
            Gets the total number of rows for the original query without any paging applied to it.
            If the value is -1, the server did not support total-counts. If it's -2, the total-count 
            is the same as the number of entities in the result-set.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.LoadedDataResults">
            <summary>
            Represents the results a completed load operation.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.LoadedDataResults.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ria.Data.Entity},System.Collections.Generic.IEnumerable{System.Windows.Ria.Data.Entity},System.Int32,System.Boolean)">
            <summary>
            Public constructor
            </summary>
            <param name="loadedEntities">The loaded entities</param>
            <param name="allLoadedEntities">All loaded entities including those loaded as associations.</param>
            <param name="totalCount">The total number of rows for the original query without any paging applied to it.</param>
            <param name="canceled">True if the load operation was canceled, false otherwise</param>
        </member>
        <member name="P:System.Windows.Ria.Data.LoadedDataResults.Canceled">
            <summary>
            Gets a value indicating whether the load operation was cancelled.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.LoadedDataResults.LoadedEntities">
            <summary>
            Gets the loaded entities.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.LoadedDataResults.AllLoadedEntities">
            <summary>
            Gets the loaded entities including those loaded as associations.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.LoadedDataResults.TotalCount">
            <summary>
            Gets the total number of rows for the original query without any paging applied to it.
            If the value is -1, the server did not support total-counts. If it's -2, the total-count 
            is the same as the number of entities in the result-set.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.LoadingDataEventArgs">
            <summary>
            Event arguments for an in progress data load operation
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.LoadingDataEventArgs.#ctor(System.Object)">
            <summary>
            Public constructor
            </summary>
            <param name="userState">Optional user state to be associated with the
            load operation</param>
        </member>
        <member name="P:System.Windows.Ria.Data.LoadingDataEventArgs.UserState">
            <summary>
            Gets the user state associated with the load operation
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.EntityOperationException">
            <summary>
            This exception indicates that at least one error has occurred
            during the processing of the data operations on the server.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityOperationException.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityOperationException.#ctor(System.String)">
            <summary>
            Constructor that accepts only a localized exception message
            </summary>
            <param name="message">The localized exception message</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityOperationException.#ctor(System.String,System.Windows.Ria.Data.OperationErrorStatus)">
            <summary>
            Constructor that accepts a localized exception message and status
            </summary>
            <param name="message">The localized exception message</param>
            <param name="status">The status of the exception</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityOperationException.#ctor(System.String,System.Windows.Ria.Data.OperationErrorStatus,System.Int32)">
            <summary>
            Constructor that accepts a localized exception message, status and custom error code
            </summary>
            <param name="message">The localized exception message</param>
            <param name="status">The status of the exception</param>
            <param name="errorCode">The custom error code</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityOperationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor that accepts a localized exception message and an inner exception
            </summary>
            <param name="message">The localized exception message</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityOperationException.#ctor(System.String,System.Windows.Ria.Data.OperationErrorStatus,System.Int32,System.String)">
            <summary>
            Internal constructor accepting optional localized message, status, 
            custom error code and stack trace of the exception. 
            </summary>
            <param name="message">The localized error message</param>
            <param name="status">status of the exception</param>
            <param name="errorCode">custom error code</param>
            <param name="stackTrace">stack trace of the exception</param>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityOperationException.StackTrace">
            <summary>
            Gets the stack trace of the exception
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityOperationException.Status">
            <summary>
            Gets or sets the status code for this exception. See <see cref="T:System.Windows.Ria.Data.OperationErrorStatus"/>
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityOperationException.ErrorCode">
            <summary>
            Gets or sets the custom error code for this exception. Can be any user
            defined value.
            </summary>
        </member>
        <member name="T:System.Web.Ria.Data.DomainIdentifierAttribute">
            <summary>
            A tagging attribute used to categorize a Type as being of a particular domain.
            </summary>
        </member>
        <member name="M:System.Web.Ria.Data.DomainIdentifierAttribute.#ctor(System.String)">
            <summary>
            Constructor that accepts the domain identifier name.
            </summary>
            <param name="name">Name of the domain identifier. This string has no framework-level semantics.  It is entirely
            up to the application developer to decide what constitutes uniqueness or whether it is case-sensitive.
            It cannot be null or empty.</param>
        </member>
        <member name="P:System.Web.Ria.Data.DomainIdentifierAttribute.Name">
            <summary>
            Gets the name of the domain identifier.
            </summary>
        </member>
        <member name="T:System.Web.Ria.Data.DomainServiceException">
            <summary>
            This exception indicates that an unrecoverable error has occurred 
            during the execution of a domain operation. When this exception is 
            thrown by the domain service, the processing of the domain operations
            stops. This exception is propagated back to the client regardless of 
            the server CustomErrors configuration. This exception can be used by 
            server code to report non-sensitive error information back to the client.
            </summary>
        </member>
        <member name="M:System.Web.Ria.Data.DomainServiceException.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:System.Web.Ria.Data.DomainServiceException.#ctor(System.String)">
            <summary>
            Constructor that accepts a localized exception message
            </summary>
            <param name="message">The localized exception message</param>
        </member>
        <member name="M:System.Web.Ria.Data.DomainServiceException.#ctor(System.Int32,System.String)">
            <summary>
            Constructor that accepts a custom error code and localized exception message
            </summary>
            <param name="errorCode">The custom error code for the exception</param>
            <param name="message">The localized exception message</param>
        </member>
        <member name="M:System.Web.Ria.Data.DomainServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor that accepts a localized exception message and an inner exception
            </summary>
            <param name="message">The localized exception message</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:System.Web.Ria.Data.DomainServiceException.ErrorCode">
            <summary>
            Gets or sets the custom error code for this exception. Can be any user
            defined value.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.SubmittedChangesEventArgs">
            <summary>
            Event arguments for a completed submit operation
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.SubmittedChangesEventArgs.#ctor(System.Windows.Ria.Data.EntityChangeSet,System.Collections.Generic.IEnumerable{System.Windows.Ria.Data.EntityOperation},System.Exception,System.Boolean,System.Object)">
            <summary>
            Public constructor
            </summary>
            <param name="changeSet">The changeset that was submitted.</param>
            <param name="operationResults">The operation results returned from the domain service.</param>
            <param name="error">Exception for the submit operation if it failed.</param>
            <param name="canceled">True if the submit operation was canceled, false otherwise.</param>
            <param name="userState">Optional user state.</param>
        </member>
        <member name="P:System.Windows.Ria.Data.SubmittedChangesEventArgs.ChangeSet">
            <summary>
            Gets the <see cref="T:System.Windows.Ria.Data.EntityChangeSet"/> that was submitted
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.SubmittedChangesEventArgs.EntitiesInError">
            <summary>
            Gets the entities that caused the submit operation to fail.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.SubmittedChangesResults">
            <summary>
            Represents the results of a submit operation.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.SubmittedChangesResults.#ctor(System.Windows.Ria.Data.EntityChangeSet,System.Collections.Generic.IEnumerable{System.Windows.Ria.Data.EntityOperation},System.Boolean)">
            <summary>
            Public constructor
            </summary>
            <param name="changeSet">The changeset that was submitted.</param>
            <param name="operationResults">The operation results returned from the domain service.</param>
            <param name="canceled">True if the submit operation was canceled, false otherwise.</param>
        </member>
        <member name="P:System.Windows.Ria.Data.SubmittedChangesResults.Canceled">
            <summary>
            Gets a value indicating whether the submit operation was canceled.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.SubmittedChangesResults.ChangeSet">
            <summary>
            Gets the <see cref="T:System.Windows.Ria.Data.EntityChangeSet"/> that was submitted
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.SubmittedChangesResults.EntitiesInError">
            <summary>
            Gets the entities that caused the submit operation to fail.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.SubmittedChangesResults.OperationResults">
            <summary>
            Gets the operation results.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.SubmittingChangesEventArgs">
            <summary>
            Event arguments for an in progress submit operation
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.SubmittingChangesEventArgs.#ctor(System.Windows.Ria.Data.EntityChangeSet,System.Object)">
            <summary>
            Public constructor
            </summary>
            <param name="changeSet">The changeset being submitted</param>
            <param name="userState">Optional user state to be associated with the
            submit operation</param>
        </member>
        <member name="P:System.Windows.Ria.Data.SubmittingChangesEventArgs.ChangeSet">
            <summary>
            Gets the <see cref="T:System.Windows.Ria.Data.EntityChangeSet"/> being submitted
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.SubmittingChangesEventArgs.UserState">
            <summary>
            Gets the user state associated with the submit operation
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.EntityChangeSet">
            <summary>
            Represents a collection of <see cref="T:System.Windows.Ria.Data.Entity"/> changes
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityChangeSet.ToString">
            <summary>
            Returns a textual summary of this change set
            </summary>
            <returns>A textual summary of the change set</returns>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityChangeSet.AddedEntities">
            <summary>
            Gets the collection of added Entities
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityChangeSet.IsEmpty">
            <summary>
            Gets a value indicating whether this changeset has no changes
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityChangeSet.ModifiedEntities">
            <summary>
            Gets the collection of modified entities
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityChangeSet.RemovedEntities">
            <summary>
            Gets the collection of removed entities
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityChangeSet.InvokedEntities">
            <summary>
            Gets the collection of entities with pending domain method invocations. 
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.IEntityCollection">
            <summary>
            Internal interface providing loosely typed access to <see cref="T:System.Windows.Ria.Data.EntityCollection`1"/> members needed
            by the framework
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.IEntityCollection.AcceptChanges">
            <summary>
            Clears out any added / removed entity tracking info
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.IEntityCollection.AddedEntities">
            <summary>
            Gets the collection of entities that have been added to this
            <see cref="T:System.Windows.Ria.Data.EntityCollection`1"/> since the last AcceptChanges
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.IEntityCollection.RemovedEntities">
            <summary>
            Gets the collection of entities that have been removed from this
            <see cref="T:System.Windows.Ria.Data.EntityCollection`1"/> since the last AcceptChanges
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.EntityCollection`1">
            <summary>
            Represents a collection of associated Entities.
            </summary>
            <typeparam name="TEntity">The type of <see cref="T:System.Windows.Ria.Data.Entity"/> in the collection</typeparam>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityCollection`1.#ctor(System.Windows.Ria.Data.Entity,System.String,System.Func{`0,System.Boolean})">
            <summary>
            Public constructor
            </summary>
            <param name="parent">The entity that this collection is a member of</param>
            <param name="memberName">The name of this EntityCollection member on the parent entity</param>
            <param name="entityPredicate">The function used to filter the associated entities, determining
            which are members of this collection.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityCollection`1.#ctor(System.Windows.Ria.Data.Entity,System.String,System.Func{`0,System.Boolean},System.Action{`0},System.Action{`0})">
            <summary>
            Public constructor
            </summary>
            <param name="parent">The entity that this collection is a member of</param>
            <param name="memberName">The name of this EntityCollection member on the parent entity</param>
            <param name="entityPredicate">The function used to filter the associated entities, determining
            which are members of this collection.</param>
            <param name="attachAction">The function used to establish a back reference from an associated entity
            to the parent entity.</param>
            <param name="detachAction">The function used to remove the back reference from an associated entity
            to the parent entity.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator for this collection
            </summary>
            <returns>An enumerator for this collection</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityCollection`1.Add(`0)">
            <summary>
            Add the specified entity to this collection. If the entity is unattached, it
            will be added to its <see cref="T:System.Windows.Ria.Data.EntityList"/> automatically.
            </summary>
            <param name="entity">The entity to add</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityCollection`1.Remove(`0)">
            <summary>
            Remove the specified entity from this collection.
            </summary>
            <param name="entity">The entity to remove</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Windows.Ria.Data.EntityCollection`1.ToString" -->
        <member name="M:System.Windows.Ria.Data.EntityCollection`1.Attach(`0)">
            <summary>
            Calls the attach method to set the entity association reference.
            </summary>
            <param name="entity">entity to attach</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityCollection`1.Detach(`0)">
            <summary>
            Calls the detach method to set the entity association reference.
            </summary>
            <param name="entity">entity to detach</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityCollection`1.Load">
            <summary>
            If not already loaded, this method runs our predicate against the source
            EntityList
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityCollection`1.Filter(`0)">
            <summary>
            When filtering entities during query execution against the source list, or during
            source list collection changed notifications, we don't want to include New entities, 
            to ensure that we don't get false positives in cases where the entity's
            FK members are auto-genned on the server or haven't been set yet.
            </summary>
            <param name="entity">The entity to filter</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityCollection`1.ParentEntityPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            PropertyChanged handler for the parent entity
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityCollection`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator">
            <summary>
            Returns an enumerator for this collection
            </summary>
            <returns>An enumerator for this collection</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityCollection`1.OnEntityListChanged">
            <summary>
            Called whenever the parent entity's <see cref="T:System.Windows.Ria.Data.EntityList"/> membership changes,
            allowing us to navigate to our source list for this collection.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityCollection`1.MonitorEntityList">
            <summary>
            Based on our current load status and our parent's attach status to an <see cref="T:System.Windows.Ria.Data.EntityContainer"/>,
            update our event subscription to the source list's CollectionChanged event, the goal being to monitor
            the source list if and only if our parent is attached and we have loaded entities (this.entitiesLoaded == true)
            and need to keep our cached list in sync.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityCollection`1.OnEntityAssociationUpdated(`0)">
            <summary>
            Callback for when an entity in the source list changes such that we need to reevaluate
            it's membership in our collection. This could be because an FK member for the association
            has changed, or when the entity state transitions to Unmodified.
            </summary>
            <param name="entity">The entity that has changed</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityCollection`1.SourceList_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Whenever the source list changes, we need to run our predicate against the
            added/removed entities and if we get any matches we propagate the event and
            merge the modifications into our cached list if we are in a loaded state.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityCollection`1.Count">
            <summary>
            Gets the current count of entities in this collection
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityCollection`1.Item(System.Int32)">
            <summary>
            Indexer into this collection
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityCollection`1.System#ComponentModel#IIndexableCollection#Item(System.Int32)">
            <summary>
            Indexer into this collection
            </summary>
        </member>
        <member name="E:System.Windows.Ria.Data.EntityCollection`1.EntityAdded">
            <summary>
            Event raised whenever an <see cref="T:System.Windows.Ria.Data.Entity"/> is added to this collection
            </summary>
        </member>
        <member name="E:System.Windows.Ria.Data.EntityCollection`1.EntityRemoved">
            <summary>
            Event raised whenever an <see cref="T:System.Windows.Ria.Data.Entity"/> is removed from this collection
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityCollection`1.IsSourceExternal">
            <summary>
            Gets a value indicating whether the EntityCollection source is external.
            </summary>
        </member>
        <member name="E:System.Windows.Ria.Data.EntityCollection`1.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
            <summary>
            Event raised whenever the contents of the collection changes
            </summary>
        </member>
        <member name="E:System.Windows.Ria.Data.EntityCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
            <summary>
            Event raised whenever a property on this collection changes
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.EntityConflict">
            <summary>
            Represents an entity conflict.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityConflict.#ctor(System.Windows.Ria.Data.Entity,System.Windows.Ria.Data.Entity,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Public constructor.
            </summary>
            <param name="storeEntity">The entity that represents the last known state from the store.</param>
            <param name="currentEntity">The entity that the user tried to save.</param>
            <param name="propertyNames">The names of properties that are in conflict.</param>
            <param name="isDeleted">Whether the entity has already been deleted from the store.</param>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityConflict.IsDeleted">
            <summary>
            Gets a value indicating whether the entity has already been deleted from the store.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityConflict.MemberConflicts">
            <summary>
            Gets the list of member conflicts.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.EntityConflictMember">
            <summary>
            Represents an member conflict.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityConflictMember.#ctor(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Public constructor.
            </summary>
            <param name="propertyName">The name of the property that is in conflict.</param>
            <param name="currentValue">The value that could not be saved.</param>
            <param name="originalValue">The original value that was modified.</param>
            <param name="storeValue">The value that is currently in the store.</param>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityConflictMember.PropertyName">
            <summary>
            Gets the name of the property that is in conflict.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityConflictMember.CurrentValue">
            <summary>
            Gets the current value that could not be saved.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityConflictMember.OriginalValue">
            <summary>
            Gets the original value that was modified.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityConflictMember.StoreValue">
            <summary>
            Gets the value that is currently in the store.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.EntityContainer">
            <summary>
            Represents a cache of Entities in the form of a collection of <see cref="T:System.Windows.Ria.Data.EntityList"/>s.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityContainer.#ctor">
            <summary>
            Protected constructor since this is an abstract class
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityContainer.AddReference(System.Windows.Ria.Data.EntityContainer)">
            <summary>
            Adds a reference to an external <see cref="T:System.Windows.Ria.Data.EntityContainer"/>.  Once a reference has been established, 
            referenced containers will also be consulted when resolving the <see cref="T:System.Windows.Ria.Data.EntityList"/> for an <see cref="T:System.Windows.Ria.Data.Entity"/> type.
            </summary>
            <param name="entityContainer">A <see cref="T:System.Windows.Ria.Data.EntityContainer"/> to register as an external reference.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityContainer.Clear">
            <summary>
            Clear the contents of all <see cref="T:System.Windows.Ria.Data.EntityList"/>s in this container
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityContainer.CheckForCyclicReferences(System.Windows.Ria.Data.EntityContainer)">
            <summary>
            Checks for cyclical references.  Returns true if a path is found to <paramref name="entityContainer"/>, false otherwise.
            </summary>
            <param name="entityContainer">The EntityContainer used to check for a cyclical reference.</param>
            <returns>A value indicating whether or not a cyclical reference path exists.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityContainer.CreateEntityList``1">
            <summary>
            Create an <see cref="T:System.Windows.Ria.Data.EntityList"/> in this container for the specified entity type
            </summary>
            <typeparam name="TEntity">The Entity type</typeparam>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityContainer.CreateEntityList``1(System.Windows.Ria.Data.EntityListOperations)">
            <summary>
            Create an <see cref="T:System.Windows.Ria.Data.EntityList"/> in this container for the specified entity type
            </summary>
            <typeparam name="TEntity">The Entity type</typeparam>
            <param name="supportedOperations">The operations supported for the Entity type</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityContainer.ListPropertyChanged(System.Windows.Ria.Data.EntityList,System.String)">
            <summary>
            Event handler for PropertyChanged events on the EntityLists in this container
            </summary>
            <param name="entityList">The EntityList</param>
            <param name="propertyName">The property that has changed</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityContainer.GetEntityList``1">
            <summary>
            Return the <see cref="T:System.Windows.Ria.Data.EntityList"/> for the specified <see cref="T:System.Windows.Ria.Data.Entity"/> Type. If there is no
            <see cref="T:System.Windows.Ria.Data.EntityList"/> for the specified type, an <see cref="T:System.InvalidOperationException"/> is thrown.
            </summary>
            <typeparam name="TEntity">The Entity type</typeparam>
            <returns>The EntityList</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityContainer.GetEntityList(System.Type)">
            <summary>
            Return the <see cref="T:System.Windows.Ria.Data.EntityList"/> for the specified <see cref="T:System.Windows.Ria.Data.Entity"/> Type. If there is no
            <see cref="T:System.Windows.Ria.Data.EntityList"/> for the specified type, and exception is thrown.
            </summary>
            <param name="entityType">The Entity type</param>
            <returns>The EntityList</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityContainer.TryGetEntityList(System.Type,System.Windows.Ria.Data.EntityList@)">
            <summary>
            Try to get the list for the specified <see cref="T:System.Windows.Ria.Data.Entity"/> type, returning false if not found
            </summary>
            <param name="entityType">The Entity type</param>
            <param name="entityList">The EntityList if present, null otherwise</param>
            <returns>True if an EntityList for the Type was found, false otherwise</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityContainer.TryGetEntityListFromReferences(System.Type,System.Windows.Ria.Data.EntityList@)">
            <summary>
            Tries to get a <see cref="T:System.Windows.Ria.Data.EntityList"/> for the specified <see cref="T:System.Windows.Ria.Data.Entity"/> type, returning false if not found.
            </summary>
            <param name="entityType">The Entity type</param>
            <param name="entityList">The EntityList if present, null otherwise</param>
            <returns>list of specified Entity type if found, null otherwise</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityContainer.GetChanges">
            <summary>
            Returns an <see cref="T:System.Windows.Ria.Data.EntityChangeSet"/> containing the current set of pending changes
            </summary>
            <returns>The current set of pending changes</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityContainer.AcceptChanges">
            <summary>
            Accept all changes that have been made to entities or <see cref="T:System.Windows.Ria.Data.EntityList"/>s
            in this container.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityContainer.RejectChanges">
            <summary>
            Revert all changes that have been made to entities or <see cref="T:System.Windows.Ria.Data.EntityList"/>s
            in this container.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityContainer.LoadEntities(System.Collections.IEnumerable)">
            <summary>
            Load the specified collection of entities into this <see cref="T:System.Windows.Ria.Data.EntityContainer"/>.
            </summary>
            <param name="entities">The Entities to load</param>
            <returns>The list of entities loaded. In cases where entities in the list
            are already cached locally, the return list will contain the cached instances.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityContainer.LoadEntities(System.Collections.IEnumerable,System.Windows.Ria.Data.MergeOption)">
            <summary>
            Load the specified collection of entities into this <see cref="T:System.Windows.Ria.Data.EntityContainer"/>.
            </summary>
            <param name="entities">The Entities to load</param>
            <param name="mergeOption">The <see cref="T:System.Windows.Ria.Data.MergeOption"/> to apply for the Load</param>
            <returns>The list of entities loaded. In cases where entities in the list
            are already cached locally, the return list will contain the cached instances.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityContainer.System#ComponentModel#IRevertibleChangeTracking#RejectChanges">
            <summary>
            Reject all changes made to this container
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityContainer.System#ComponentModel#IChangeTracking#AcceptChanges">
            <summary>
            Accept all changes made to this container
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityContainer.RaisePropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event for the specified property
            </summary>
            <param name="propertyName">The name of the property that has changed</param>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityContainer.HasChanges">
            <summary>
            Gets a value indicating whether this EntityContainer currently has any pending changes
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityContainer.ReferencedEntityContainers">
            <summary>
            Gets a list of referenced <see cref="T:System.Windows.Ria.Data.EntityContainer"/> instances used in <see cref="T:System.Windows.Ria.Data.Entity"/> list resolution.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityContainer.System#ComponentModel#IChangeTracking#IsChanged">
            <summary>
            Gets a value indicating whether this container currently has any pending changes
            </summary>
        </member>
        <member name="E:System.Windows.Ria.Data.EntityContainer.PropertyChanged">
            <summary>
            Occurs when a property has changed.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.EntityKey">
            <summary>
            Base class for keys representing unique entity identity, suitable for hashing. 
            This class also provides factory methods for the creation of keys.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityKey.Create``2(``0,``1)">
            <summary>
            Creates an key using the specified key values
            </summary>
            <typeparam name="T1">First key value type</typeparam>
            <typeparam name="T2">Second key value type</typeparam>
            <param name="v1">First key value</param>
            <param name="v2">Second key value</param>
            <returns>The entity key</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityKey.Create``3(``0,``1,``2)">
            <summary>
            Creates an key using the specified key values
            </summary>
            <typeparam name="T1">First key value type</typeparam>
            <typeparam name="T2">Second key value type</typeparam>
            <typeparam name="T3">Third key value type</typeparam>
            <param name="v1">First key value</param>
            <param name="v2">Second key value</param>
            <param name="v3">Third key value</param>
            <returns>The entity key</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityKey.Create``4(``0,``1,``2,``3)">
            <summary>
            Creates an key using the specified key values
            </summary>
            <typeparam name="T1">First key value type</typeparam>
            <typeparam name="T2">Second key value type</typeparam>
            <typeparam name="T3">Third key value type</typeparam>
            <typeparam name="T4">Fourth key value type</typeparam>
            <param name="v1">First key value</param>
            <param name="v2">Second key value</param>
            <param name="v3">Third key value</param>
            <param name="v4">Fourth key value</param>
            <returns>The entity key</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityKey.Create``5(``0,``1,``2,``3,``4)">
            <summary>
            Creates an key using the specified key values
            </summary>
            <typeparam name="T1">First key value type</typeparam>
            <typeparam name="T2">Second key value type</typeparam>
            <typeparam name="T3">Third key value type</typeparam>
            <typeparam name="T4">Fourth key value type</typeparam>
            <typeparam name="T5">Fifth key value type</typeparam>
            <param name="v1">First key value</param>
            <param name="v2">Second key value</param>
            <param name="v3">Third key value</param>
            <param name="v4">Fourth key value</param>
            <param name="v5">Fifth key value</param>
            <returns>The entity key</returns>
            <remarks>Stopping at 5 strongly typed overloads arbitrarily. Longer keys will
            be uncommon, and when they occur they will be handled by the params version.</remarks>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityKey.Create(System.Object[])">
            <summary>
            Creates an key using the specified key values.
            </summary>
            <param name="keyValues">Array of key values</param>
            <returns>The entity key</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityKey.VerifyKeyValueNotNull(System.Object)">
            <summary>
            Verify that the specified key value isn't null, and throw if it is
            </summary>
            <param name="value">The key value to validate</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityKey.ToString">
            <summary>
            Formats the key as a set of key values
            </summary>
            <returns>The formatted key representation</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityKey.FormatKey(System.Text.StringBuilder)">
            <summary>
            Append the key values for this key to the <see cref="T:System.Text.StringBuilder"/>
            </summary>
            <param name="sb">The <see cref="T:System.Text.StringBuilder"/> to append to</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityKey.FormatKeyValue``1(System.Text.StringBuilder,``0)">
            <summary>
            Appends the string representation of the specified value
            to the <see cref="T:System.Text.StringBuilder"/>
            </summary>
            <typeparam name="T">The key value type</typeparam>
            <param name="sb">The <see cref="T:System.Text.StringBuilder"/> to append to</param>
            <param name="value">The key value to format</param>
        </member>
        <member name="T:System.Windows.Ria.Data.EntityKey`1">
            <summary>
            Strongly typed single member key implementation that avoids value boxing.
            </summary>
            <typeparam name="T">The Type of the key member</typeparam>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityKey`1.#ctor(`0)">
            <summary>
            Constructs a key
            </summary>
            <param name="v">The key value</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityKey`1.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>The hash code</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityKey`1.Equals(System.Object)">
            <summary>
            Determines if the specified key is equal to
            this key
            </summary>
            <param name="obj">The other key</param>
            <returns>True if the keys are equal</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityKey`1.FormatKey(System.Text.StringBuilder)">
            <summary>
            Recursively build the list of key values
            </summary>
            <param name="sb">The <see cref="T:System.Text.StringBuilder"/> to append to</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityKey`1.Equals(System.Windows.Ria.Data.EntityKey{`0})">
            <summary>
            Determines if the specified key is equal to
            this key
            </summary>
            <param name="other">The other key</param>
            <returns>True if the keys are equal</returns>
        </member>
        <member name="T:System.Windows.Ria.Data.EntityKey`2">
            <summary>
            Strongly typed multipart key implementation that avoids value boxing.
            Nested instances of this class can be created for keys with 3 or more
            members.
            </summary>
            <typeparam name="T1">The Type of the first part of the key</typeparam>
            <typeparam name="T2">The Type of the second part of the key</typeparam>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityKey`2.#ctor(`0,`1)">
            <summary>
            Constructs a key
            </summary>
            <param name="v1">The first key value</param>
            <param name="v2">The second key value</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityKey`2.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>The hash code</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityKey`2.Equals(System.Object)">
            <summary>
            Determines if the specified key is equal to
            this key
            </summary>
            <param name="obj">The other key</param>
            <returns>True if the keys are equal</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityKey`2.FormatKey(System.Text.StringBuilder)">
            <summary>
            Recursively build the list of key values
            </summary>
            <param name="sb">The <see cref="T:System.Text.StringBuilder"/> to append to</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityKey`2.Equals(System.Windows.Ria.Data.EntityKey{`0,`1})">
            <summary>
            Determines if the specified key is equal to
            this key
            </summary>
            <param name="other">The other key</param>
            <returns>True if the keys are equal</returns>
        </member>
        <member name="T:System.Windows.Ria.Data.EntityList">
            <summary>
            Represents a collection of <see cref="T:System.Windows.Ria.Data.Entity"/> instances, providing change tracking and other services.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.#ctor(System.Type)">
            <summary>
            Protected constructor since this is an abstract class
            </summary>
            <param name="entityType">The type of <see cref="T:System.Windows.Ria.Data.Entity"/> the list will contain</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.Clear">
            <summary>
            Clears all Entities from the list
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.TrackAsInteresting(System.Windows.Ria.Data.Entity,System.Boolean)">
            <summary>
            Tracks or untracks the specified entity as one that should be considered during
            changeset computation. This is more efficient than visiting every
            entity when computing changesets.
            </summary>
            <param name="entity">The entity to track or untrack</param>
            <param name="isInteresting">True if the entity is interesting, false otherwise</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.CreateList">
            <summary>
            Creates a new entity list.
            </summary>
            <returns>The created entity list instance.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.CreateEntity">
            <summary>
            Creates a new entity.
            </summary>
            <returns>The created entity instance.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.GetEnumerator">
            <summary>
            Returns an enumerator for the collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.EntityPropertyChanged(System.Windows.Ria.Data.Entity,System.String)">
            <summary>
            Handles change notifications from changed properties of entities in this list.
            </summary>
            <param name="entity">The entity that was updated.</param>
            <param name="propertyName">The name of the property that was changed.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.RegisterAssociationCallback``1(System.ComponentModel.DataAnnotations.AssociationAttribute,System.Action{``0},System.Boolean)">
            <summary>
            Registers or unregisters the specified callback for update notifications for the specified association member. The
            callback will be invoked whenever a FK member participating in the association is modified on an entity in this
            EntityList.
            </summary>
            <param name="association">AssociationAttribute indicating the association to monitor</param>
            <param name="callback">The callback to call</param>
            <param name="register">True if the callback is being registered, false if it is being unregistered</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.Add(System.Windows.Ria.Data.Entity)">
            <summary>
            Adds the specified <see cref="T:System.Windows.Ria.Data.Entity"/> to this <see cref="T:System.Windows.Ria.Data.EntityList"/>, also 
            recursively adding all unattached entities reachable via associations.
            </summary>
            <param name="entity">The entity to add.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.AddInternal(System.Windows.Ria.Data.Entity)">
            <summary>
            Adds the specified entity to this list.
            </summary>
            <param name="entity">The entity to add.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.Remove(System.Windows.Ria.Data.Entity)">
            <summary>
            Removes the specified entity from the list.
            </summary>
            <param name="entity">The entity to remove.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.BeginEdit(System.Windows.Ria.Data.Entity)">
            <summary>
            Begin editing the specified <see cref="T:System.Windows.Ria.Data.Entity"/>
            </summary>
            <param name="entity">The entity to edit</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.EndEdit(System.Windows.Ria.Data.Entity)">
            <summary>
            End editing the specified <see cref="T:System.Windows.Ria.Data.Entity"/>
            </summary>
            <param name="entity">The entity to end editing</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.CancelEdit(System.Windows.Ria.Data.Entity)">
            <summary>
            Cancel edits to the specified <see cref="T:System.Windows.Ria.Data.Entity"/>
            </summary>
            <param name="entity">The entity to cancel edits for</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.AcceptChanges">
            <summary>
            Accepts all changes made to this <see cref="T:System.Windows.Ria.Data.EntityList"/>
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.RejectChanges">
            <summary>
            Reverts all changes made to this <see cref="T:System.Windows.Ria.Data.EntityList"/>. For modified entities,
            all modified property values are set back to their original values. New entities are
            removed, and any entities that were removed are re-added.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.Attach(System.Windows.Ria.Data.Entity)">
            <summary>
            Attaches the specified <see cref="T:System.Windows.Ria.Data.Entity"/> to this <see cref="T:System.Windows.Ria.Data.EntityList"/> in an
            unmodified state, also recursively attaching all unattached entities reachable via
            associations.
            </summary>
            <param name="entity">The entity to attach</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.AttachInternal(System.Windows.Ria.Data.Entity)">
            <summary>
            Attaches the <see cref="T:System.Windows.Ria.Data.Entity"/> to this <see cref="T:System.Windows.Ria.Data.EntityList"/> in an
            unmodified state.
            </summary>
            <param name="entity">The entity to attach</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.Detach(System.Windows.Ria.Data.Entity)">
            <summary>
            Detaches the specified <see cref="T:System.Windows.Ria.Data.Entity"/> from this <see cref="T:System.Windows.Ria.Data.EntityList"/>. If the entity
            is not in this list, an <see cref="T:System.InvalidOperationException"/> will be thrown.
            </summary>
            <param name="entity">The entity to detach</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.LoadEntity(System.Windows.Ria.Data.Entity)">
            <summary>
            Load the specified entity into the list
            </summary>
            <param name="entity">The entity to load</param>
            <returns>If the entity was already in the list
            (based on key identity) the cached instance is returned. If the
            entity wasn't in the list, the specified instance is returned
            </returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.LoadEntity(System.Windows.Ria.Data.Entity,System.Windows.Ria.Data.MergeOption)">
            <summary>
            Load the specified entity into the list, using the specified
            <see cref="T:System.Windows.Ria.Data.MergeOption"/>.
            </summary>
            <param name="entity">The entity to load</param>
            <param name="mergeOption">The MergeOption to apply for the Load</param>
            <returns>If the entity was already in the list
            (based on key identity) the cached instance is returned. If the
            entity wasn't in the list, the specified instance is returned
            </returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.AddToCache(System.Windows.Ria.Data.Entity)">
            <summary>
            Adds the specified entity to the cache. If a cache entry for the
            same identity already exists, an exception is thrown.
            </summary>
            <param name="entity">The entity to add</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.RemoveFromCache(System.Windows.Ria.Data.Entity)">
            <summary>
            Removes the specified entity from the cache.
            </summary>
            <param name="entity">The entity to remove.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.GetEntityByKey(System.Object[])">
            <summary>
            Queries the cache for the entity indicated by the specified key
            values returning it if found, or returning null otherwise
            </summary>
            <param name="keyValues">The key values specified in the correct member order</param>
            <returns>The entity if found, null otherwise</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.LoadEntities(System.Collections.Generic.IEnumerable{System.Windows.Ria.Data.Entity})">
            <summary>
            Load the specified set of entities
            </summary>
            <param name="entities">The set of entities to load</param>
            <returns>list of loaded entities</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.LoadEntities(System.Collections.Generic.IEnumerable{System.Windows.Ria.Data.Entity},System.Windows.Ria.Data.MergeOption)">
            <summary>
            Load the specified set of entities
            </summary>
            <param name="entities">The set of entities to load</param>
            <param name="mergeOption">The <see cref="T:System.Windows.Ria.Data.MergeOption"/> to apply for the Load</param>
            <returns>The set of entities in the local cache after the load operation</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)">
            <summary>
            Method called whenever the collection changes. Overrides should call the base method
            to raise any required change notifications
            </summary>
            <param name="action">The change action</param>
            <param name="affectedObject">For Reset events, this will be a collection of removed entities. For all other
            events, this will be the single affected entity.</param>
            <param name="index">The affected index</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.RaisePropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event for the specified property
            </summary>
            <param name="propertyName">The property that has changed</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when an <see cref="T:System.Windows.Ria.Data.EntityList"/> property has changed.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityList.EntityContainer">
            <summary>
            Gets the container this <see cref="T:System.Windows.Ria.Data.EntityList"/> belongs to
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityList.IsReadOnly">
            <summary>
            Gets a value indicating whether this list supports update operations. Returns
            true if update operations are not supported, false otherwise.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityList.List">
            <summary>
            Gets the backing list for this <see cref="T:System.Windows.Ria.Data.EntityList"/>
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityList.InterestingEntities">
            <summary>
            Gets a collection of all 'interesting' entities for the purposes of changeset computation. Interesting
            entities include those that are new, removed, or have been touched by an update operation.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityList.HasChanges">
            <summary>
            Gets a value indicating whether this EntityList currently has any pending changes
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityList.Item(System.Int32)">
            <summary>
            Returns the entity at the specified index
            </summary>
            <param name="index">The index of entity to retrieve</param>
            <returns>The entity at the specified index</returns>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityList.Count">
            <summary>
            Gets the current count of Entities in the list
            </summary>
        </member>
        <member name="E:System.Windows.Ria.Data.EntityList.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
            <summary>
            Event raised when the collection has changed, or the collection is reset.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityList.CanAdd">
            <summary>
            Gets a value indicating whether the collection allows new items to be added
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityList.CanEdit">
            <summary>
            Gets a value indicating whether members of the collection can be edited
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityList.CanRemove">
            <summary>
            Gets a value indicating whether the collection allows items to be removed.
            Note that newly added items can always be removed.
            </summary>
        </member>
        <member name="E:System.Windows.Ria.Data.EntityList.PropertyChanged">
            <summary>
            Event raised when a property has changed.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.EntityList.AddAttachInferrer">
            <summary>
            Visitor used to traverse all associations in a graph and infer
            Attach/Add entities that are unattached.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.EntityList`1">
            <summary>
            Represents a collection of <see cref="T:System.Windows.Ria.Data.Entity"/> instances, providing change tracking and other services.
            </summary>
            <typeparam name="TEntity">The type of <see cref="T:System.Windows.Ria.Data.Entity"/> this list will contain</typeparam>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList`1.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList`1.CreateList">
            <summary>
            Creates a new entity list.
            </summary>
            <returns>The created entity list instance.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList`1.CreateEntity">
            <summary>
            Creates a new entity.
            </summary>
            <returns>The created entity instance.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList`1.GetEnumerator">
            <summary>
            Returns an enumerator
            </summary>
            <returns>The enumerator</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList`1.Attach(`0)">
            <summary>
            Attaches the <see cref="T:System.Windows.Ria.Data.Entity"/> to this <see cref="T:System.Windows.Ria.Data.EntityList"/> in an
            unmodified state.
            </summary>
            <remarks>The <paramref name="entity"/> needs to be of type <typeparamref name="TEntity"/>, and cannot be a subclass.</remarks>
            <param name="entity">The entity to attach</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList`1.Detach(`0)">
            <summary>
            Detaches the <see cref="T:System.Windows.Ria.Data.Entity"/> from this <see cref="T:System.Windows.Ria.Data.EntityList"/>.
            </summary>
            <param name="entity">The entity to detach</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList`1.Add(`0)">
            <summary>
            Add the specified entity to the collection. If CanAdd is false, an <see cref="T:System.InvalidOperationException"/>
            will be thrown.
            </summary>
            <remarks><paramref name="entity"/> needs to be of type <typeparamref name="TEntity"/>, and cannot be a subclass.</remarks>
            <param name="entity">The entity to add</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList`1.Remove(`0)">
            <summary>
            Remove the specified entity from the collection. If CanRemove is false
            and the specified entity is not newly added, an <see cref="T:System.InvalidOperationException"/>
            will be thrown.
            </summary>
            <param name="entity">The entity to remove</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityList`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)">
            <summary>
            Method called whenever the collection changes.
            </summary>
            <param name="action">The change action</param>
            <param name="affectedObject">For Reset events, this will be a collection of removed entities. For all other
            events, this will be the single affected entity.</param>
            <param name="index">The affected index</param>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityList`1.Item(System.Int32)">
            <summary>
            Returns the entity at the specified index
            </summary>
            <param name="index">index of entity to retrieve</param>
            <returns>The entity at the specified index</returns>
        </member>
        <member name="E:System.Windows.Ria.Data.EntityList`1.EntityAdded">
            <summary>
            Event raised whenever an <see cref="T:System.Windows.Ria.Data.Entity"/> is added to this collection
            </summary>
        </member>
        <member name="E:System.Windows.Ria.Data.EntityList`1.EntityRemoved">
            <summary>
            Event raised whenever an <see cref="T:System.Windows.Ria.Data.Entity"/> is removed to this collection
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.EntityListOperations">
            <summary>
            Enumeration of the types of operations permissable
            on an <see cref="T:System.Windows.Ria.Data.EntityList"/>.
            </summary>
        </member>
        <member name="F:System.Windows.Ria.Data.EntityListOperations.None">
            <summary>
            Only Selection is permitted, no update operations are allowed.
            </summary>
        </member>
        <member name="F:System.Windows.Ria.Data.EntityListOperations.Add">
            <summary>
            New entities may be added
            </summary>
        </member>
        <member name="F:System.Windows.Ria.Data.EntityListOperations.Edit">
            <summary>
            Entities may be updated
            </summary>
        </member>
        <member name="F:System.Windows.Ria.Data.EntityListOperations.Remove">
            <summary>
            Entities may be removed
            </summary>
        </member>
        <member name="F:System.Windows.Ria.Data.EntityListOperations.All">
            <summary>
            Entities may be added, updated and removed
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.EntityOperation">
            <summary>
            Represents a domain operation to be performed on an entity. This is the message
            type passed between data-client and domain service both for sending operations to
            the domain service as well as for returning operation results back to the data-client.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityOperation.#ctor(System.Windows.Ria.Data.Entity,System.Int32,System.Windows.Ria.Data.EntityOperationType)">
            <summary>
            Public constructor
            </summary>
            <param name="entity">The entity being operated on</param>
            <param name="id">The client ID for the entity</param>
            <param name="operationType">The operation to be performed</param>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityOperation.HasError">
            <summary>
            Gets a value indicating whether the entity operation contains errors, validation errors or conflicts.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityOperation.Entity">
            <summary>
            Gets or sets the <see cref="P:System.Windows.Ria.Data.EntityOperation.Entity"/> being operated on. After a submit operation
            has completed, this member may contain updated entity state returned from the
            domain service.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityOperation.OriginalEntity">
            <summary>
            Gets or sets the original state of the entity being operated on
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityOperation.StoreEntity">
            <summary>
            Gets or sets the state of the entity in the data store
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityOperation.ClientEntity">
            <summary>
            Gets or sets the entity that was originally submitted <see cref="P:System.Windows.Ria.Data.EntityOperation.Entity"/>. Used to correlate 
            an <see cref="T:System.Windows.Ria.Data.EntityOperation"/> result back to its originally submitted client entity instance.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityOperation.Id">
            <summary>
            Gets or sets the Client Id for the entity
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityOperation.Operation">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Ria.Data.EntityOperationType"/> for this <see cref="T:System.Windows.Ria.Data.EntityOperation"/>
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityOperation.OperationData">
            <summary>
            Gets or sets additional operation data for use by domain methods.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityOperation.OperationName">
            <summary>
            Gets or sets the name of the operation. This is only used by domain methods.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityOperation.Errors">
            <summary>
            Gets or sets the errors encountered during the execution of the operation. 
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityOperation.ValidationErrors">
            <summary>
            Gets or sets the validation errors encountered during the processing of the operation. 
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityOperation.ConflictMembers">
            <summary>
            Gets or sets the collection of members in conflict. The Entity property
            contains the current store value for each property.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityOperation.IsDeleteConflict">
            <summary>
            Gets or sets a value indicating whether the confict (if there is one) is a delete conflict.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityOperation.Associations">
            <summary>
            Gets or sets the collection of Ids of the associated entities for
            each association of the Entity
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityOperation.OriginalAssociations">
            <summary>
            Gets or sets the collection of Ids of the associated entities for
            each association of the OriginalEntity
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.EntityRef`1">
            <summary>
            Represents an reference to an associated entity.
            </summary>
            <typeparam name="TEntity">The type of the associated <see cref="P:System.Windows.Ria.Data.EntityRef`1.Entity"/></typeparam>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityRef`1.#ctor(System.Windows.Ria.Data.Entity,System.String,System.Func{`0,System.Boolean})">
            <summary>
            Public constructor
            </summary>
            <param name="parent">The entity that this association is a member of</param>
            <param name="memberName">The name of this EntityRef member on the parent entity</param>
            <param name="entityPredicate">The function used to filter the associated entity.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityRef`1.SetValue(`0)">
            <summary>
            Set the entity value and raise a property changed notification if required.
            All internal assignments should be made through this method, to maintain
            'hasAssignedValue'.
            </summary>
            <param name="value">The new entity instance</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityRef`1.Filter(`0)">
            <summary>
            When filtering entities during query execution against the source list we don't want
            to include New entities, to ensure that we don't get false positives in cases where 
            the entity's FK members are auto-genned on the server or haven't been set yet.
            </summary>
            <param name="entity">The entity to filter</param>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityRef`1.MonitorEntityList">
            <summary>
            Subscribe to the source list's CollectionChanged event, so we can monitor additions to and
            removals from the list so we can update the status of our reference and raise the required
            property change notifications.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityRef`1.SourceList_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Whenever the source list changes, we need to run our predicate against the
            added/removed entities and if we get any matches we propagate update our cached
            reference and raise the property changed notification for this EntityRef property
            on the parent.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.EntityRef`1.OnEntityListChanged">
            <summary>
            Called whenever the parent entity's <see cref="T:System.Windows.Ria.Data.EntityList"/> membership changes,
            allowing us to navigate to our source list for this collection.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.EntityRef`1.Entity">
            <summary>
            Gets or sets the associated <see cref="P:System.Windows.Ria.Data.EntityRef`1.Entity"/>
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.EntityState">
            <summary>
            Enumeration of the possible states an <see cref="T:System.Windows.Ria.Data.Entity"/>
            can be in.
            </summary>
        </member>
        <member name="F:System.Windows.Ria.Data.EntityState.Unmodified">
            <summary>
            The entity is in its original, unmodified state
            </summary>
        </member>
        <member name="F:System.Windows.Ria.Data.EntityState.Modified">
            <summary>
            The entity has been modified
            </summary>
        </member>
        <member name="F:System.Windows.Ria.Data.EntityState.New">
            <summary>
            The entity is new
            </summary>
        </member>
        <member name="F:System.Windows.Ria.Data.EntityState.Deleted">
            <summary>
            The entity is marked for delete
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.HttpDomainClient">
            <summary>
            Default <see cref="T:System.Windows.Ria.Data.DomainClient"/> implementation using HTTP.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.HttpDomainClient.#ctor(System.Uri)">
            <summary>
            Public constructor
            </summary>
            <param name="serviceUri">The domain service Uri</param>
            <exception cref="T:System.ArgumentNullException"> is thrown if <paramref name="serviceUri"/>
            is null.
            </exception>
        </member>
        <member name="M:System.Windows.Ria.Data.HttpDomainClient.#ctor(System.Uri,System.Boolean)">
            <summary>
            Public constructor
            </summary>
            <param name="serviceUri">The domain service Uri</param>
            <param name="usesSsl">A value indicating whether the client should contact
            the service using an HTTP or HTTPS scheme.
            </param>
            <exception cref="T:System.ArgumentNullException"> is thrown if <paramref name="serviceUri"/>
            is null.
            </exception>
            <exception cref="T:System.ArgumentException"> is thrown if <paramref name="serviceUri"/>
            is absolute and <paramref name="usesSsl"/> is true.
            </exception>
        </member>
        <member name="M:System.Windows.Ria.Data.HttpDomainClient.BeginQueryCore(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Linq.IQueryable,System.AsyncCallback,System.Object)">
            <summary>
            Method called by the framework to begin an asynchronous query operation
            </summary>
            <param name="queryName">The name of the query to invoke.</param>
            <param name="parameters">Optional collection of name value parameter value pairs.</param>
            <param name="query">Optional query to filter results by.</param>
            <param name="callback">The callback to invoke when the query has been executed.</param>
            <param name="userState">Optional state associated with this operation.</param>
            <returns>An asynchronous result that identifies this query.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.HttpDomainClient.EndQueryCore(System.IAsyncResult)">
            <summary>
            Gets the results of a query.
            </summary>
            <param name="asyncResult">An asynchronous result that identifies a query.</param>
            <returns>The results returned by the query.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.HttpDomainClient.BeginSubmitCore(System.Windows.Ria.Data.EntityChangeSet,System.Collections.Generic.IEnumerable{System.Windows.Ria.Data.EntityOperation},System.AsyncCallback,System.Object)">
            <summary>
            Method called by the framework to asynchronously process the specified changeset.
            </summary>
            <param name="submitOperations">The set of <see cref="T:System.Windows.Ria.Data.EntityOperation"/>s for the changeset</param>
            <param name="changeSet">The changeset to submit. If the change set is empty, an <see cref="T:System.InvalidOperationException"/> will
            be thrown.</param>
            <param name="callback">The callback to invoke when the submit has been executed.</param>
            <param name="userState">Optional user state associated with this operation.</param>
            <returns>An asynchronous result that identifies this submit.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.HttpDomainClient.EndSubmitCore(System.IAsyncResult)">
            <summary>
            Gets the results of a submit operation.
            </summary>
            <param name="asyncResult">An asynchronous result that identifies a submit operation.</param>
            <returns>The results returned by the submit operation.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.HttpDomainClient.GetRequestResult(System.Net.HttpWebRequest,System.IAsyncResult)">
            <summary>
            Deserialize the results from the request to the domain service, handling any error conditions
            </summary>
            <param name="request">The original request</param>
            <param name="asyncResult">IAsyncResult for the async operation</param>
            <returns>The result of the domain operation</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.HttpDomainClient.BeginInvokeCore(System.Object,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
            <summary>
            Invokes an service operation asynchronously.
            </summary>
            <param name="instance">The instance on which the method was called client-side.</param>
            <param name="methodName">The name of the method to invoke.</param>
            <param name="returnType">The <see cref="T:System.Type"/> of the method return value</param>
            <param name="parameters">Optional name/value collection of parameters to the method.</param>
            <param name="callback">The callback to invoke when the invocation has been completed.</param>
            <param name="userState">Optional user state that will be passed through on the <see cref="T:System.Windows.Ria.Data.InvokeCompletedResults"/></param>
            <returns>An asynchronous result that identifies this invocation.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.HttpDomainClient.EndInvokeCore(System.IAsyncResult)">
            <summary>
            Gets the results of an invocation.
            </summary>
            <param name="asyncResult">An asynchronous result that identifies an invocation.</param>
            <returns>The results returned by the invocation.</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.HttpDomainClient.ConvertReturnValue(System.Type,System.Object)">
            <summary>
            Converts the return value sent down from the server based on
            the expected return type of the service operation.
            </summary>
            <param name="returnType">expected return type</param>
            <param name="rawValue">deserialized return value from the server</param>
            <returns>converted return value based on the return type</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.HttpDomainClient.GetKnownTypesForParameters(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Get list of known types based on the knownTypes class member
            and any special types that need to be added to handle the 
            specified parameters
            </summary>
            <param name="parameters">list of parameters</param>
            <returns>list of known types to be used with the specified parameters</returns>
        </member>
        <member name="M:System.Windows.Ria.Data.HttpDomainClient.ComposeAbsoluteServiceUri">
            <summary>
            If the service Uri is relative, this method uses the application
            source to create an absolute Uri.
            </summary>
            <remarks>
            If usesSsl in the constructor was true, the Uri will be created using
            a https scheme instead.
            </remarks>
        </member>
        <member name="P:System.Windows.Ria.Data.HttpDomainClient.ServiceUri">
            <summary>
            Gets the absolute path to the domain service.
            </summary>
            <remarks>
            The value returned is either the absolute Uri passed into the constructor, or
            an absolute Uri constructed from the relative Uri passed into the constructor.
            Relative Uris will be made absolute using the Application Host source.
            </remarks>
        </member>
        <member name="T:System.Windows.Ria.Data.InvokeCompletedResults">
            <summary>
            Represents the results of a service operation invocation
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.InvokeCompletedResults.#ctor(System.Object)">
            <summary>
            Public constructor
            </summary>
            <param name="returnValue">The value returned from the server.</param>
        </member>
        <member name="M:System.Windows.Ria.Data.InvokeCompletedResults.#ctor(System.Object,System.Collections.Generic.IEnumerable{System.Web.Ria.Data.OperationError})">
            <summary>
            Public constructor
            </summary>
            <param name="returnValue">The value returned from the server.</param>
            <param name="validationErrors">A list of validation errors.</param>
        </member>
        <member name="P:System.Windows.Ria.Data.InvokeCompletedResults.ValidationErrors">
            <summary>
            Gets the validation errors.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.InvokeCompletedResults.ReturnValue">
            <summary>
            Gets the value returned from the server.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.InvokeEventArgs">
            <summary>
            Event arguments for a service operation invocation.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.InvokeEventArgs.#ctor(System.Object,System.Collections.Generic.IEnumerable{System.Web.Ria.Data.OperationError},System.Exception,System.Boolean,System.Object)">
            <summary>
            Public constructor
            </summary>
            <param name="returnValue">The value returned from the server.</param>
            <param name="validationErrors">The validation errors.</param>
            <param name="error">The error that occured during the invocation.</param>
            <param name="canceled">A flag indicating whether the invocation was canceled.</param>
            <param name="userState">User-defined state associated with the invocation.</param>
        </member>
        <member name="P:System.Windows.Ria.Data.InvokeEventArgs.ValidationErrors">
            <summary>
            Gets the validation errors.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.InvokeEventArgs.ReturnValue">
            <summary>
            Gets the value returned from the server.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.MergeOption">
            <summary>
            Used to control identity cache behavior when loading entities.
            Each option specifies the merge behavior when an entity that has been
            previously read and cached is read again.
            </summary>
        </member>
        <member name="F:System.Windows.Ria.Data.MergeOption.KeepCurrentValues">
            <summary>
            The cached instance is not changed and the newly read instance is discarded.
            </summary>
        </member>
        <member name="F:System.Windows.Ria.Data.MergeOption.KeepChanges">
            <summary>
            Values from the newly read instance are merged into the cached instance
            for property values that are unmodified. No changes are lost in this merge.
            </summary>
        </member>
        <member name="F:System.Windows.Ria.Data.MergeOption.OverwriteCurrentValues">
            <summary>
            All members of the cached instance are overwritten with current values from the
            newly read instance, regardless of whether they have been modified.
            </summary>
        </member>
        <member name="T:System.Web.Ria.Data.OperationError">
            <summary>
            The data contract of an error that has occurred 
            during the execution of an operation on the server.
            This is sent back along with the domain operation 
            result(s) to the client.
            </summary>
        </member>
        <member name="M:System.Web.Ria.Data.OperationError.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:System.Web.Ria.Data.OperationError.#ctor(System.String,System.String)">
            <summary>
            Constructor accepting an optional localized error message
            </summary>
            <param name="message">The localized error message</param>
            <param name="sourceMemberName">The name of the member the error originated from.</param>
        </member>
        <member name="M:System.Web.Ria.Data.OperationError.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Constructor accepting an optional localized error message and and collection 
            of the names of the members the error originated from.
            </summary>
            <param name="message">The localized message</param>
            <param name="sourceMemberNames">A collection of the names of the members the error originated from.</param>
        </member>
        <member name="M:System.Web.Ria.Data.OperationError.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Constructor accepting an optional localized error message, error code, stack trace,
            and name of the member the error originated from.
            </summary>
            <param name="message">The localized error message</param>
            <param name="errorCode">The custom error code</param>
            <param name="stackTrace">The error stack trace</param>
            <param name="sourceMemberName">The name of the member the error originated from.</param>
        </member>
        <member name="M:System.Web.Ria.Data.OperationError.#ctor(System.String,System.Int32,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Constructor accepting an optional localized error message, error code, stack trace,
            and collection of the names of the members the error originated from.
            </summary>
            <param name="message">The localized error message</param>
            <param name="errorCode">The custom error code</param>
            <param name="stackTrace">The error stack trace</param>
            <param name="sourceMemberNames">A collection of the names of the members the error originated from.</param>
        </member>
        <member name="M:System.Web.Ria.Data.OperationError.GetHashCode">
            <summary>
            Returns the hash code for this object.
            </summary>
            <returns>The hash code for this object.</returns>
        </member>
        <member name="M:System.Web.Ria.Data.OperationError.System#IEquatable{System#Web#Ria#Data#OperationError}#Equals(System.Web.Ria.Data.OperationError)">
            <summary>
            Test the current instance against the specified instance for equality
            </summary>
            <param name="other">The OperationError to compare to</param>
            <returns>True if the instances are equal, false otherwise</returns>
        </member>
        <member name="P:System.Web.Ria.Data.OperationError.Message">
            <summary>
            Gets or sets the error message
            </summary>
        </member>
        <member name="P:System.Web.Ria.Data.OperationError.ErrorCode">
            <summary>
            Gets or sets custom error code
            </summary>
        </member>
        <member name="P:System.Web.Ria.Data.OperationError.StackTrace">
            <summary>
            Gets or sets the stack trace of the error
            </summary>
        </member>
        <member name="P:System.Web.Ria.Data.OperationError.SourceMemberNames">
            <summary>
            Gets or sets the names of the members the error originated from.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.OperationErrorStatus">
            <summary>
            Enumeration representing possible domain operation error statuses.
            </summary>
        </member>
        <member name="F:System.Windows.Ria.Data.OperationErrorStatus.NotFound">
            <summary>
            Resource cannot be found.
            </summary>
            <remarks>Corresponds to HttpStatusCode 404</remarks>
        </member>
        <member name="F:System.Windows.Ria.Data.OperationErrorStatus.ServerError">
            <summary>
            A server error has occurred during the processing of the operation.
            </summary>
            <remarks>Corresponds to HttpStatusCode 500</remarks>
        </member>
        <member name="F:System.Windows.Ria.Data.OperationErrorStatus.NotSupported">
            <summary>
            The operation is not supported.
            </summary>
            <remarks>Corresponds to HttpStatusCode 400</remarks>
        </member>
        <member name="F:System.Windows.Ria.Data.OperationErrorStatus.Unauthorized">
            <summary>
            The operation is not authorized for execution.
            </summary>
            <remarks>Corresponds to HttpStatusCode 401</remarks>
        </member>
        <member name="F:System.Windows.Ria.Data.OperationErrorStatus.ValidationFailed">
            <summary>
            Validation for the operation has failed. See 
            <see cref="P:System.Windows.Ria.Data.Entity.ValidationErrors"/> for the 
            validation errors for a given entity.
            </summary>
        </member>
        <member name="F:System.Windows.Ria.Data.OperationErrorStatus.Conflicts">
            <summary>
            Conflicts have been detected. See <see cref="P:System.Windows.Ria.Data.Entity.Conflict"/> 
            for the conflicts for a given entity.
            </summary>
        </member>
        <member name="F:System.Windows.Ria.Data.OperationErrorStatus.MethodFailed">
            <summary>
            Execution of the domain operation has failed on the server.
            See <see cref="P:System.Windows.Ria.Data.Entity.Errors"/> for these errors for 
            a given entity.
            </summary>
        </member>
        <member name="F:System.Windows.Ria.Data.OperationErrorStatus.Custom">
            <summary>
            A DomainServiceException has occurred during the operation.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.QueryCompletedResults">
            <summary>
            Represents the results of a query operation
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.QueryCompletedResults.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ria.Data.Entity},System.Int32)">
            <summary>
            Public constructor
            </summary>
            <param name="entities">The entities returned from the query</param>
            <param name="totalCount">The total number of rows for the original query without any paging applied to it.</param>
        </member>
        <member name="P:System.Windows.Ria.Data.QueryCompletedResults.Entities">
            <summary>
            Gets the entities returned from the query
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.QueryCompletedResults.TotalCount">
            <summary>
            Gets the total number of rows for the original query without any paging applied to it.
            If the value is -1, the server did not support total-counts. If it's -2, the total-count 
            is the same as the number of entities in the result-set.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Data.Resource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.Application_MultipleInitializations">
            <summary>
              Looks up a localized string similar to Initialize should only be called once.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.Application_UriMustBeFullyQualified">
            <summary>
              Looks up a localized string similar to The application URI must be fully qualified.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.DomainClient_ApplicationNotInitialized">
            <summary>
              Looks up a localized string similar to The Application object has not been initialized yet..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.DomainClient_ConflictDetected">
            <summary>
              Looks up a localized string similar to One or more update operations failed because of conflicts. Please inspect Entity.Conflict for each entity in EntitiesInError for more information..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.DomainClient_EmptyChangeSet">
            <summary>
              Looks up a localized string similar to The submitted change set was empty..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.DomainClient_EndInvoke_Already_Called">
            <summary>
              Looks up a localized string similar to EndInvoke has already been called..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.DomainClient_EndSubmit_Already_Called">
            <summary>
              Looks up a localized string similar to EndSubmit has already been called..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.DomainClient_EntityTypesAlreadyInitialized">
            <summary>
              Looks up a localized string similar to EntityTypes has already been initialized.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.DomainClient_InvocationNameCannotBeNullOrEmpty">
            <summary>
              Looks up a localized string similar to Domain method invocation name cannot be null or empty..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.DomainClient_MethodFailed">
            <summary>
              Looks up a localized string similar to The execution of one or more data operations has failed. Please inspect Entity.Errors for each entity in EntitiesInError for more information..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.DomainClient_Operation_Already_In_Progress">
            <summary>
              Looks up a localized string similar to This client is already performing an operation. Multiple active operations are not supported..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.DomainClient_ResourceNotFound">
            <summary>
              Looks up a localized string similar to The specified resource was not found.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.DomainClient_ValidationFailed">
            <summary>
              Looks up a localized string similar to The validation for one or more data operations has failed. Please inspect Entity.ValidationErrors for each entity in EntitiesInError for more information..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.DomainContext_EntityContainerCannotBeNull">
            <summary>
              Looks up a localized string similar to The EntityContainer for a DomainContext cannot be null..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.DomainContext_InvalidServiceUri">
            <summary>
              Looks up a localized string similar to The specified service URI is of the wrong format.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.DomainContext_Invoke_Validation_Failed">
            <summary>
              Looks up a localized string similar to One or more of the parameters passed to &apos;{0}&apos; is invalid..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.DomainContext_SubmitAlreadyInProgress">
            <summary>
              Looks up a localized string similar to A SubmitChanges operation is already in progress on this DomainContext..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.DomainOperationOutOfRange">
            <summary>
              Looks up a localized string similar to Value {0} is not a valid DomainOperation enumeration value.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.Entity_InvokeOnDeletedEntity">
            <summary>
              Looks up a localized string similar to Domain method cannot be invoked on an entity in a Deleted state..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.Entity_InvokeOnUnattachedEntity">
            <summary>
              Looks up a localized string similar to Domain method cannot be invoked on an unattached Entity..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.Entity_KeyMembersCannotBeChanged">
            <summary>
              Looks up a localized string similar to The value of key member &apos;{0}&apos; on an instance of an entity of type &apos;{1}&apos; has changed. Entity key members cannot be changed..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.Entity_MultipleDomainMethodInvocations">
            <summary>
              Looks up a localized string similar to Only one pending domain method invocation is allowed per entity..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.Entity_Not_In_Collection">
            <summary>
              Looks up a localized string similar to The specified Entity is not a member of this collection.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.Entity_Property_Does_Not_Exist">
            <summary>
              Looks up a localized string similar to The entity of type {0} does not contain a public property named {1}..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.Entity_Property_Is_ReadOnly">
            <summary>
              Looks up a localized string similar to The {0} property is read only..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.Entity_ReadOnly">
            <summary>
              Looks up a localized string similar to The entity is read-only because one of its domain-methods has been invoked, or the entity is part of a submit in progress..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.Entity_UncommittedChanges">
            <summary>
              Looks up a localized string similar to Entity &apos;{0}&apos; is currently being edited and has uncommitted changes. A call to BeginEdit must be followed by a call to EndEdit or CancelEdit before changes can be submitted..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.EntityCollection_ModificationNotAllowedForExternalReference">
            <summary>
              Looks up a localized string similar to Modification of an EntityCollection whose source is external is not permitted..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.EntityConflict_IsDeleteConflict">
            <summary>
              Looks up a localized string similar to MemberConflicts is not available for delete conflicts..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.EntityContainer_AddReference_CyclicalReferenceNotAllowed">
            <summary>
              Looks up a localized string similar to EntityContainer references cannot contain cyclical references..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.EntityContainerDoesntContainEntityType">
            <summary>
              Looks up a localized string similar to This EntityContainer doesn&apos;t contain an EntityList of type &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.EntityKey_CannotBeNull">
            <summary>
              Looks up a localized string similar to An EntityKey value cannot be null.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.EntityKey_EmptyKeyMembers">
            <summary>
              Looks up a localized string similar to To create an EntityKey, you must specify at least one key value..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.EntityList_DuplicateIdentity">
            <summary>
              Looks up a localized string similar to An entity with the same identity already exists in this EntityList..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.EntityList_EntityAlreadyAttached">
            <summary>
              Looks up a localized string similar to The entity being added is already attached to another EntityList.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.EntityList_EntityAlreadyInList">
            <summary>
              Looks up a localized string similar to The specified entity is already contained in a list.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.EntityList_EntityNotInList">
            <summary>
              Looks up a localized string similar to The specified entity is not contained within this list..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.EntityList_UnsupportedOperation">
            <summary>
              Looks up a localized string similar to This entity list of type &apos;{0}&apos; does not support the &apos;{1}&apos; operation..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.EntityList_Wrong_Type">
            <summary>
              Looks up a localized string similar to Entity of type &apos;{0}&apos; cannot be added to EntityList of type &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.FailedToConvertValue">
            <summary>
              Looks up a localized string similar to Failed to convert value of type &apos;{0}&apos; to type &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.Invalid_Method">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; does not contain a public method named &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.InvalidOperationExceptionType">
            <summary>
              Looks up a localized string similar to The specified exception type &apos;{0}&apos; is not one of the expected types of recoverable errors.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.Load_Aready_In_Progress">
            <summary>
              Looks up a localized string similar to This context is already performing a load operation.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.MemberMustBeAssociation">
            <summary>
              Looks up a localized string similar to Member &apos;{0}&apos; specified must be an association member, marked with the AssociationAttribute.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.OperationErrorTypeOutOfRange">
            <summary>
              Looks up a localized string similar to Value {0} is not a valid OperationErrorType enum value.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.Parameter_NullOrEmpty">
            <summary>
              Looks up a localized string similar to The parameter &apos;{0}&apos; cannot be null or empty..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.Type_Not_Entity">
            <summary>
              Looks up a localized string similar to Type &apos;{0}&apos; does not derive from Entity.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.ValidationUtilities_AmbiguousMatch">
            <summary>
              Looks up a localized string similar to Ambiguous match for method &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.Resource.ValidationUtilities_MethodNotFound">
            <summary>
              Looks up a localized string similar to Method &apos;{0}&apos; accepting {1} parameter(s) could not be found..
            </summary>
        </member>
        <member name="T:System.Web.Ria.Data.SharedAttribute">
            <summary>
            Attribute used to mark types, fields or properties as shared.
            </summary>
            <remarks>
            Types, fields or properties marked with this attribute will not be created in the generated code
            since this attribute indicates they are already included in the compiled code.
            </remarks>
        </member>
        <member name="T:System.Windows.Ria.Data.SubmitCompletedResults">
            <summary>
            Represents the results of a submit operation.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Data.SubmitCompletedResults.#ctor(System.Windows.Ria.Data.EntityChangeSet,System.Collections.Generic.IEnumerable{System.Windows.Ria.Data.EntityOperation})">
            <summary>
            Public constructor
            </summary>
            <param name="changeSet">The changeset that was submitted.</param>
            <param name="operationResults">The <see cref="T:System.Windows.Ria.Data.EntityOperation"/> results sent back from the 
            domain service for the submit operation.</param>
        </member>
        <member name="P:System.Windows.Ria.Data.SubmitCompletedResults.ChangeSet">
            <summary>
            Gets the <see cref="T:System.Windows.Ria.Data.EntityChangeSet"/> that was submitted
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Data.SubmitCompletedResults.Results">
            <summary>
            Gets the <see cref="T:System.Windows.Ria.Data.EntityOperation"/> results that were returned
            from the domain service.
            </summary>
        </member>
        <member name="M:System.Web.Ria.Data.ValidationUtilities.CreateValidationContext(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Creates a new <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext"/> for the current object instance.
            </summary>
            <param name="instance">The object instance being validated.</param>
            <param name="parentContext">Optional context to inherit from.  May be null.</param>
            <returns>A new validation context.</returns>
        </member>
        <member name="M:System.Web.Ria.Data.ValidationUtilities.TryValidateMethodCall(System.Reflection.MethodInfo,System.ComponentModel.DataAnnotations.ValidationContext,System.Object[],System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            Determines whether it is valid to call the specified method.
            </summary>
            <remarks>
            This method evaluates all <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>s associated with the method and its parameters.  Any failure returns <c>false</c>.
            </remarks>
            <param name="method">The method to be called</param>
            <param name="validationContext">Describes the method being tested</param>
            <param name="parameters">The parameter values to be passed to the method.  They will be validated.</param>
            <param name="validationResults">Optional collection to receive validation results for failed validations.</param>
            <returns><c>true</c> if the method is valid.</returns>
        </member>
        <member name="M:System.Web.Ria.Data.ValidationUtilities.TryValidateMethodCall(System.Object,System.String,System.ComponentModel.DataAnnotations.ValidationContext,System.Object[],System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            Determines whether it is valid to call the specified method.
            </summary>
            <remarks>
            This method evaluates all <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>s associated with the method and its parameters.  Any failure returns <c>false</c>.
            </remarks>
            <param name="instance">The object instance containing the method</param>
            <param name="methodName">The name of the method to be called</param>
            <param name="validationContext">Describes the method being tested</param>
            <param name="parameters">The parameter values to be passed to the method.  They will be validated.</param>
            <param name="validationResults">Optional collection to receive validation results for failed validations.</param>
            <returns><c>true</c> if the method is valid.</returns>
        </member>
        <member name="M:System.Web.Ria.Data.ValidationUtilities.ValidateMethodCall(System.Object,System.String,System.ComponentModel.DataAnnotations.ValidationContext,System.Object[])">
            <summary>
            Throws a <see cref="T:System.ComponentModel.DataAnnotations.ValidationException"/> if it is not valid to call the specified method.
            </summary>
            <remarks>This method evaluates all the <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>s associated with the
            method and its parameters. Any failure will cause the exception to be thrown.
            </remarks>
            <param name="instance">Object instance on which the method will be called.</param>
            <param name="methodName">The name of the method to be called</param>
            <param name="validationContext">Describes the method being called.</param>
            <param name="parameters">The parameter values to be passed to the method.  They will be validated.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="instance"/> is null</exception>
            <exception cref="T:System.ArgumentException">When <paramref name="instance"/> doesn't match the <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance"/> on <paramref name="validationContext"/></exception>
            <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException"> When it is not valid to call the specified method</exception>
        </member>
        <member name="M:System.Web.Ria.Data.ValidationUtilities.GetMethod(System.Object,System.String,System.Object[])">
            <summary>
            Internal helper method for getting a method from an object instance that matches
            the specified parameters.
            </summary>
            <param name="instance">Object instance on which the method will be called</param>
            <param name="methodName">The name of the method to be called</param>
            <param name="parameters">The parameter values to be passed to the method</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Ria.Data.ValidationUtilities.IsBindable(System.Reflection.MethodInfo,System.Object[])">
            <summary>
            Checks whether the specified set of parameters can be passed to the specified method.
            </summary>
            <param name="method">The method to validate the set of parameters against.</param>
            <param name="parameters">The set of parameters to check.</param>
            <returns><c>true</c> if the set of parameters can be passed to the specified method.</returns>
        </member>
        <member name="M:System.Web.Ria.Data.ValidationUtilities.GetDisplayAttribute(System.Reflection.ICustomAttributeProvider)">
            <summary>
            Gets the DisplayAttribute that applies to a method, parameter, property, etc.
            </summary>
            <param name="member"></param>
            <returns>A <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute"/> found or <c>null</c> if none is found</returns>
        </member>
        <member name="T:System.Windows.Ria.ApplicationServices.LoadUserCompletedEventArgs">
            <summary>
            Event arguments for a completed <see cref="M:System.Windows.Ria.ApplicationServices.UserService.LoadUser"/> operation.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.LoadUserCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the LoadUserCompletedEventArgs class.
            </summary>
            <param name="error">The error. See <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error"/></param>
            <param name="canceled">The canceled state. See <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled"/></param>
            <param name="userState">The user state. See <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.UserState"/></param>
        </member>
        <member name="T:System.Windows.Ria.ApplicationServices.LoginCompletedEventArgs">
            <summary>
            Event arguments for a completed <see cref="M:System.Windows.Ria.ApplicationServices.UserService.Login(System.Windows.Ria.ApplicationServices.LoginParameters)"/> operation.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.LoginCompletedEventArgs.#ctor(System.Boolean,System.Windows.Ria.ApplicationServices.LoginParameters,System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the LoginCompletedEventArgs class.
            </summary>
            <param name="success">Whether the server successfully authenticated the specific identity</param>
            <param name="loginParameters">The parameters used in the completed operation</param>
            <param name="error">The error. See <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error"/></param>
            <param name="canceled">The canceled state. See <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled"/></param>
            <param name="userState">The user state. See <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.UserState"/></param>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.LoginCompletedEventArgs.LoginSuccess">
            <summary>
            Gets a value indicating whether the server successfully authenticated the specific identity.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            See <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary"/>
            </exception>
            <exception cref="T:System.Reflection.TargetInvocationException">
            See <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary"/>
            </exception>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.LoginCompletedEventArgs.LoginParameters">
            <summary>
            Gets the parameters used in the <see cref="M:System.Windows.Ria.ApplicationServices.UserService.Login(System.Windows.Ria.ApplicationServices.LoginParameters)"/> operation.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.ApplicationServices.LoginParameters">
            <summary>
            Used as the single parameter for <see cref="M:System.Windows.Ria.ApplicationServices.UserService.Login(System.Windows.Ria.ApplicationServices.LoginParameters)"/>
            </summary>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.LoginParameters.#ctor">
            <summary>
            Initializes a new instance of the LoginParameters class with default values.
            </summary>
            <remarks>
            This login will not persist.
            </remarks>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.LoginParameters.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the LoginParameters class with the specified name 
            and password.
            </summary>
            <remarks>
            This login will not persist.
            </remarks>
            <param name="userName">The name of the user to be authenticated</param>
            <param name="password">The password of the user to be authenticated</param>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.LoginParameters.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the LoginParameters class with the specified name,
            password, and persistence.
            </summary>
            <param name="userName">The name of the user to be authenticated</param>
            <param name="password">The password of the user to be authenticated</param>
            <param name="isPersistent">Whether the login should persist between sessions</param>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.LoginParameters.UserName">
            <summary>
            Gets the name of the user to be authenticated.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.LoginParameters.Password">
            <summary>
            Gets the password of the user to be authenticated.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.LoginParameters.IsPersistent">
            <summary>
            Gets a value indicating whether the login should persist between sessions.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.ApplicationServices.LogoutCompletedEventArgs">
            <summary>
            Event arguments for a completed <see cref="M:System.Windows.Ria.ApplicationServices.UserService.Logout"/> operation.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.LogoutCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the LogoutCompletedEventArgs class.
            </summary>
            <param name="error">The error. See <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error"/></param>
            <param name="canceled">The canceled state. See <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled"/></param>
            <param name="userState">The user state. See <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.UserState"/></param>
        </member>
        <member name="T:System.Windows.Ria.ApplicationServices.SaveUserCompletedEventArgs">
            <summary>
            Event arguments for a completed <see cref="M:System.Windows.Ria.ApplicationServices.UserService.SaveUser"/> operation.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.SaveUserCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the SaveUserCompletedEventArgs class.
            </summary>
            <param name="error">The error. See <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error"/></param>
            <param name="canceled">The canceled state. See <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled"/></param>
            <param name="userState">The user state. See <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.UserState"/></param>
        </member>
        <member name="M:System.Windows.Ria.Linq.Evaluator.PartialEval(System.Linq.Expressions.Expression,System.Func{System.Linq.Expressions.Expression,System.Boolean})">
            <summary>
            Performs evaluation and replacement of independent sub-trees
            </summary>
            <param name="expression">The root of the expression tree.</param>
            <param name="fnCanBeEvaluated">A function that decides whether a given expression 
            node can be part of the local function.</param>
            <returns>A new tree with sub-trees evaluated and replaced.</returns>
        </member>
        <member name="M:System.Windows.Ria.Linq.Evaluator.PartialEval(System.Linq.Expressions.Expression)">
            <summary>
            Performs evaluation and replacement of independent sub-trees
            </summary>
            <param name="expression">The root of the expression tree.</param>
            <returns>A new tree with sub-trees evaluated and replaced.</returns>
        </member>
        <member name="T:System.Windows.Ria.Linq.Evaluator.SubtreeEvaluator">
            <summary>
            Evaluates and replaces sub-trees when first candidate is reached (top-down)
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Linq.Evaluator.Nominator">
            <summary>
            Performs bottom-up analysis to determine which nodes can possibly
            be part of an evaluated sub-tree.
            </summary>
        </member>
        <member name="T:System.Windows.Ria.Linq.QuerySerializer">
            <summary>
            This serializer supports Where, OrderBy, Skip and Take.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Linq.QuerySerializer.Visitor.GetQueryRoot(System.Linq.Expressions.Expression)">
            <summary>
            Drill through MethodCallExpression chain searching for the root of
            the query.
            </summary>
            <param name="expr"></param>
            <returns>root of the query</returns>
        </member>
        <member name="M:System.Windows.Ria.Linq.QuerySerializer.Visitor.FlattenOrderExpressions">
            <summary>
            Unify all ordering expressions into a single order expression
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Linq.QuerySerializer.Visitor.VerifyMethodAccessibility(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Verify that the declaring type of the method is one of the supported types.
            Note that this list of types corresponds to the list of accessible types
            defined by the server query parser.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Linq.QuerySerializer.Visitor.ValidateConstant(System.Object)">
            <summary>
            Ensure that the specified constant value is of a Type
            supported by the server query serializer - we don't want
            to serialize a value that the server can't handle.
            </summary>
            <param name="value">The constant value</param>
        </member>
        <member name="T:System.Windows.Ria.Linq.Resource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Linq.Resource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Linq.Resource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Linq.Resource.FailedToConvertValue">
            <summary>
              Looks up a localized string similar to Failed to convert value of type &apos;{0}&apos; to type &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Linq.Resource.QuerySerialization_BitwiseOperatorsNotSupported">
            <summary>
              Looks up a localized string similar to Bitwise operators are not supported in queries.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Linq.Resource.QuerySerialization_MethodNotAccessible">
            <summary>
              Looks up a localized string similar to Method &apos;{0}&apos; on type &apos;{1}&apos; is not accessible. Only methods on primitive types, System.Math and System.Convert are supported in queries..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Linq.Resource.QuerySerialization_NestedQueriesNotSupported">
            <summary>
              Looks up a localized string similar to Nested query expressions are not supported..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Linq.Resource.QuerySerialization_NewExpressionsNotSupported">
            <summary>
              Looks up a localized string similar to &apos;New&apos; Expressions are not supported in queries.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Linq.Resource.QuerySerialization_UnsupportedBinaryOp">
            <summary>
              Looks up a localized string similar to Binary operation &apos;{0}&apos; is not supported.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Linq.Resource.QuerySerialization_UnsupportedQueryOperator">
            <summary>
              Looks up a localized string similar to Query operator &apos;{0}&apos; is not supported.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Linq.Resource.QuerySerialization_UnsupportedType">
            <summary>
              Looks up a localized string similar to Value of type &apos;{0}&apos; cannot be serialized as part of the query. &apos;{0}&apos; is not a supported Type..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Linq.Resource.QuerySerialization_UnsupportedUnaryOp">
            <summary>
              Looks up a localized string similar to Unary operation &apos;{0}&apos; is not supported.
            </summary>
        </member>
        <member name="M:System.Windows.Ria.Linq.Utility.IsNullableType(System.Type)">
            <summary>
            Returns <c>true</c> if the given type is a <see cref="T:System.Nullable"/>
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the given type is a nullable type</returns>
        </member>
        <member name="M:System.Windows.Ria.Linq.Utility.GetNonNullableType(System.Type)">
            <summary>
            If the given type is <see cref="T:System.Nullable"/>, returns the element type,
            otherwise simply returns the input type
            </summary>
            <param name="type">The type to test that may or may not be Nullable</param>
            <returns>Either the input type or, if it was Nullable, its element type</returns>
        </member>
        <member name="M:System.Windows.Ria.Linq.Utility.IsPredefinedType(System.Type)">
            <summary>
            Returns <c>true</c> if the given type is a primitive type or one
            of our standard acceptable simple types, such as <see cref="T:System.String"/>,
            <see cref="T:System.Guid"/>, or one of our standard generic types whose generic
            argument is primitive or simple (e.g. Nullable, IEnumerable).
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the type is a primitive or standard acceptable types</returns>
        </member>
        <member name="M:System.Windows.Ria.Linq.Utility.IsPredefinedListType(System.Type)">
            <summary>
            Returns <c>true</c> if the given type is <see cref="T:System.Collections.Generic.IEnumerable`1"/> or an <see cref="T:System.Collections.IList"/> type, 
            and is either an interface, an array, or has a default constructor.
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the type is a primitive or standard acceptable types</returns>
        </member>
        <member name="M:System.Windows.Ria.Linq.Utility.IsPredefinedSimpleType(System.Type)">
            <summary>
            Returns <c>true</c> if the given type is either primitive or one of our
            standard acceptable simple types, such as <see cref="T:System.String"/>,
            <see cref="T:System.Guid"/>, etc
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the type is a primitive or standard acceptable types</returns>
        </member>
        <member name="M:System.Windows.Ria.Linq.Utility.IsPredefinedGenericType(System.Type)">
            <summary>
            Returns <c>true</c> if the given type is one of our well-known generic types,
            such as <see cref="T:System.Nullable"/> or <see cref="T:System.Collections.IEnumerable"/>
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the type is one of our predefined generic types</returns>
        </member>
        <member name="M:System.Windows.Ria.Linq.Utility.GetElementType(System.Type)">
            <summary>
            Returns the underlying element type starting from a given type.
            </summary>
            <remarks>
            Simple types simply return the input type.
            If the given type is an array, this method returns the array's
            element type.
            If the type is a generic type of <see cref="T:System.Collections.IEnumerable"/>, 
            or <see cref="T:System.Nullable"/>, this method returns the element
            type of the generic parameter
            </remarks>
            <param name="type"></param>
            <returns>The underlying element type starting from the given type</returns>
        </member>
        <member name="T:System.Threading.OrderedSynchronizationContext">
            <summary>
            Represents a synchronization context which preserves ordering.
            </summary>
        </member>
        <member name="M:System.Threading.OrderedSynchronizationContext.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:System.Threading.OrderedSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
            <summary>
            Dispatches an asynchronous message.
            </summary>
            <param name="d">The <see cref="T:System.Threading.SendOrPostCallback"/> delegate to call.</param>
            <param name="state">The object passed to the delegate.</param>
        </member>
        <member name="M:System.Threading.OrderedSynchronizationContext.ProcessPendingCallbacks(System.Object)">
            <summary>
            Processes all the pending callbacks.
            </summary>
            <param name="state">This value is always null.</param>
        </member>
        <member name="T:System.Windows.Ria.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Resources.ApplicationServices_CannotInitializeDomainContext">
            <summary>
              Looks up a localized string similar to The DomainContextType is null or invalid and there are no contexts generated from AuthenticationBase&lt;T&gt;..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Resources.ApplicationServices_CannotInitializeUser">
            <summary>
              Looks up a localized string similar to The User type must extend UserBase and provide a default constructor..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Resources.ApplicationServices_NoLoadUserMethod">
            <summary>
              Looks up a localized string similar to Derived service does not contain a LoadUser method..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Resources.ApplicationServices_ServiceMustBeActive">
            <summary>
              Looks up a localized string similar to The service must be active to invoke method..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Resources.ApplicationServices_ServiceMustNotBeActive">
            <summary>
              Looks up a localized string similar to The service must be inactive to update state..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Resources.ApplicationServices_UserServiceIsBusy">
            <summary>
              Looks up a localized string similar to UserService operation already in progress..
            </summary>
        </member>
        <member name="P:System.Windows.Ria.Resources.Data_AbsoluteUriCannotRequestSSL">
            <summary>
              Looks up a localized string similar to The SSL scheme cannot be specified for absolute URIs..
            </summary>
        </member>
        <member name="T:System.Windows.Ria.ApplicationServices.UserContext">
            <summary>
            Context to allow declarative data binding to the current user in xaml.
            </summary>
            <remarks>
            This context facilitates binding to the user provided by
            the current <see cref="T:System.Windows.Ria.ApplicationServices.UserService"/>.
            </remarks>
            <seealso cref="P:System.Windows.Ria.ApplicationServices.UserService.Current"/>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserContext.#ctor">
            <summary>
            Initializes a new instance of the UserContext class with the current
            <see cref="T:System.Windows.Ria.ApplicationServices.UserService"/>.
            </summary>
            <exception cref="T:System.ArgumentNullException"> is thrown if 
            the current <see cref="T:System.Windows.Ria.ApplicationServices.UserService"/> is null.
            </exception>
            <seealso cref="P:System.Windows.Ria.ApplicationServices.UserService.Current"/>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserContext.#ctor(System.Windows.Ria.ApplicationServices.UserService)">
            <summary>
            Initializes a new instance of the UserContext class with the specified 
            service.
            </summary>
            <remarks>
            This context facilitates binding to the user provided by the specified
            service.
            </remarks>
            <param name="service">The service that provides the user to bind to</param>
            <exception cref="T:System.ArgumentNullException"> is thrown if 
            <paramref name="service"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserContext.Service_UserChanged(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            Handles service completion events by treating them as changes to the user. 
            </summary>
            <param name="sender">The user service</param>
            <param name="e">The completion event args</param>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserContext.RaisePropertyChanged(System.String)">
            <summary>
            Raises a <see cref="E:System.Windows.Ria.ApplicationServices.UserContext.PropertyChanged"/> event for the specified property.
            </summary>
            <param name="propertyName">The property to raise an event for</param>
            <exception cref="T:System.ArgumentNullException"> is thrown if the 
            <paramref name="propertyName"/> is null.
            </exception>
        </member>
        <member name="M:System.Windows.Ria.ApplicationServices.UserContext.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises a <see cref="E:System.Windows.Ria.ApplicationServices.UserContext.PropertyChanged"/> event.
            </summary>
            <param name="e">The event to raise</param>
        </member>
        <member name="E:System.Windows.Ria.ApplicationServices.UserContext.PropertyChanged">
            <summary>
            Occurs when a property value changes. See <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.UserContext.User">
            <summary>
            Gets the user provided by the service.
            </summary>
        </member>
        <member name="P:System.Windows.Ria.ApplicationServices.UserContext.Service">
            <summary>
            Gets the <see cref="T:System.Windows.Ria.ApplicationServices.UserService"/> this context facilitates binding to
            the user of.
            </summary>
        </member>
    </members>
</doc>
